{"ast":null,"code":"// automatically generated by the FlatBuffers compiler, do not modify\nimport * as NS7624605610262437867 from './Schema';\n/**\n * ----------------------------------------------------------------------\n * Arrow File metadata\n *\n *\n * @constructor\n */\nexport var org;\n(function (org) {\n  var apache;\n  (function (apache) {\n    var arrow;\n    (function (arrow) {\n      var flatbuf;\n      (function (flatbuf) {\n        class Footer {\n          constructor() {\n            this.bb = null;\n            this.bb_pos = 0;\n          }\n          /**\n           * @param number i\n           * @param flatbuffers.ByteBuffer bb\n           * @returns Footer\n           */\n          __init(i, bb) {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n          }\n          /**\n           * @param flatbuffers.ByteBuffer bb\n           * @param Footer= obj\n           * @returns Footer\n           */\n          static getRootAsFooter(bb, obj) {\n            return (obj || new Footer()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n          }\n          /**\n           * @returns org.apache.arrow.flatbuf.MetadataVersion\n           */\n          version() {\n            let offset = this.bb.__offset(this.bb_pos, 4);\n            return offset ? /**  */this.bb.readInt16(this.bb_pos + offset) : NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1;\n          }\n          /**\n           * @param org.apache.arrow.flatbuf.Schema= obj\n           * @returns org.apache.arrow.flatbuf.Schema|null\n           */\n          schema(obj) {\n            let offset = this.bb.__offset(this.bb_pos, 6);\n            return offset ? (obj || new NS7624605610262437867.org.apache.arrow.flatbuf.Schema()).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\n          }\n          /**\n           * @param number index\n           * @param org.apache.arrow.flatbuf.Block= obj\n           * @returns org.apache.arrow.flatbuf.Block\n           */\n          dictionaries(index, obj) {\n            let offset = this.bb.__offset(this.bb_pos, 8);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Block()).__init(this.bb.__vector(this.bb_pos + offset) + index * 24, this.bb) : null;\n          }\n          /**\n           * @returns number\n           */\n          dictionariesLength() {\n            let offset = this.bb.__offset(this.bb_pos, 8);\n            return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n          }\n          /**\n           * @param number index\n           * @param org.apache.arrow.flatbuf.Block= obj\n           * @returns org.apache.arrow.flatbuf.Block\n           */\n          recordBatches(index, obj) {\n            let offset = this.bb.__offset(this.bb_pos, 10);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Block()).__init(this.bb.__vector(this.bb_pos + offset) + index * 24, this.bb) : null;\n          }\n          /**\n           * @returns number\n           */\n          recordBatchesLength() {\n            let offset = this.bb.__offset(this.bb_pos, 10);\n            return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           */\n          static startFooter(builder) {\n            builder.startObject(4);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param org.apache.arrow.flatbuf.MetadataVersion version\n           */\n          static addVersion(builder, version) {\n            builder.addFieldInt16(0, version, NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param flatbuffers.Offset schemaOffset\n           */\n          static addSchema(builder, schemaOffset) {\n            builder.addFieldOffset(1, schemaOffset, 0);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param flatbuffers.Offset dictionariesOffset\n           */\n          static addDictionaries(builder, dictionariesOffset) {\n            builder.addFieldOffset(2, dictionariesOffset, 0);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param number numElems\n           */\n          static startDictionariesVector(builder, numElems) {\n            builder.startVector(24, numElems, 8);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param flatbuffers.Offset recordBatchesOffset\n           */\n          static addRecordBatches(builder, recordBatchesOffset) {\n            builder.addFieldOffset(3, recordBatchesOffset, 0);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param number numElems\n           */\n          static startRecordBatchesVector(builder, numElems) {\n            builder.startVector(24, numElems, 8);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @returns flatbuffers.Offset\n           */\n          static endFooter(builder) {\n            let offset = builder.endObject();\n            return offset;\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param flatbuffers.Offset offset\n           */\n          static finishFooterBuffer(builder, offset) {\n            builder.finish(offset);\n          }\n          static createFooter(builder, version, schemaOffset, dictionariesOffset, recordBatchesOffset) {\n            Footer.startFooter(builder);\n            Footer.addVersion(builder, version);\n            Footer.addSchema(builder, schemaOffset);\n            Footer.addDictionaries(builder, dictionariesOffset);\n            Footer.addRecordBatches(builder, recordBatchesOffset);\n            return Footer.endFooter(builder);\n          }\n        }\n        flatbuf.Footer = Footer;\n      })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n    })(arrow = apache.arrow || (apache.arrow = {}));\n  })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * @constructor\n */\n(function (org) {\n  var apache;\n  (function (apache) {\n    var arrow;\n    (function (arrow) {\n      var flatbuf;\n      (function (flatbuf) {\n        class Block {\n          constructor() {\n            this.bb = null;\n            this.bb_pos = 0;\n          }\n          /**\n           * @param number i\n           * @param flatbuffers.ByteBuffer bb\n           * @returns Block\n           */\n          __init(i, bb) {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n          }\n          /**\n           * Index to the start of the RecordBlock (note this is past the Message header)\n           *\n           * @returns flatbuffers.Long\n           */\n          offset() {\n            return this.bb.readInt64(this.bb_pos);\n          }\n          /**\n           * Length of the metadata\n           *\n           * @returns number\n           */\n          metaDataLength() {\n            return this.bb.readInt32(this.bb_pos + 8);\n          }\n          /**\n           * Length of the data (this is aligned so there can be a gap between this and\n           * the metatdata).\n           *\n           * @returns flatbuffers.Long\n           */\n          bodyLength() {\n            return this.bb.readInt64(this.bb_pos + 16);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param flatbuffers.Long offset\n           * @param number metaDataLength\n           * @param flatbuffers.Long bodyLength\n           * @returns flatbuffers.Offset\n           */\n          static createBlock(builder, offset, metaDataLength, bodyLength) {\n            builder.prep(8, 24);\n            builder.writeInt64(bodyLength);\n            builder.pad(4);\n            builder.writeInt32(metaDataLength);\n            builder.writeInt64(offset);\n            return builder.offset();\n          }\n        }\n        flatbuf.Block = Block;\n      })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n    })(arrow = apache.arrow || (apache.arrow = {}));\n  })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));","map":{"version":3,"mappings":"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","names":["NS7624605610262437867","org","Footer","constructor","__init","i","bb","bb_pos","getRootAsFooter","obj","readInt32","position","version","offset","__offset","readInt16","apache","arrow","flatbuf","MetadataVersion","V1","schema","Schema","__indirect","dictionaries","index","Block","__vector","dictionariesLength","__vector_len","recordBatches","recordBatchesLength","startFooter","builder","startObject","addVersion","addFieldInt16","addSchema","schemaOffset","addFieldOffset","addDictionaries","dictionariesOffset","startDictionariesVector","numElems","startVector","addRecordBatches","recordBatchesOffset","startRecordBatchesVector","endFooter","endObject","finishFooterBuffer","finish","createFooter","readInt64","metaDataLength","bodyLength","createBlock","prep","writeInt64","pad","writeInt32"],"sources":["fb/File.ts"],"sourcesContent":["// automatically generated by the FlatBuffers compiler, do not modify\n\nimport { flatbuffers } from 'flatbuffers';\nimport * as NS7624605610262437867 from './Schema';\n/**\n * ----------------------------------------------------------------------\n * Arrow File metadata\n *\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Footer {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Footer\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Footer {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Footer= obj\n         * @returns Footer\n         */\n        static getRootAsFooter(bb: flatbuffers.ByteBuffer, obj?: Footer): Footer {\n            return (obj || new Footer).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.MetadataVersion\n         */\n        version(): NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1;\n        }\n\n        /**\n         * @param org.apache.arrow.flatbuf.Schema= obj\n         * @returns org.apache.arrow.flatbuf.Schema|null\n         */\n        schema(obj?: NS7624605610262437867.org.apache.arrow.flatbuf.Schema): NS7624605610262437867.org.apache.arrow.flatbuf.Schema | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new NS7624605610262437867.org.apache.arrow.flatbuf.Schema).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Block= obj\n         * @returns org.apache.arrow.flatbuf.Block\n         */\n        dictionaries(index: number, obj?: org.apache.arrow.flatbuf.Block): org.apache.arrow.flatbuf.Block | null {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Block).__init(this.bb!.__vector(this.bb_pos + offset) + index * 24, this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        dictionariesLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Block= obj\n         * @returns org.apache.arrow.flatbuf.Block\n         */\n        recordBatches(index: number, obj?: org.apache.arrow.flatbuf.Block): org.apache.arrow.flatbuf.Block | null {\n            let offset = this.bb!.__offset(this.bb_pos, 10);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Block).__init(this.bb!.__vector(this.bb_pos + offset) + index * 24, this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        recordBatchesLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 10);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startFooter(builder: flatbuffers.Builder) {\n            builder.startObject(4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.MetadataVersion version\n         */\n        static addVersion(builder: flatbuffers.Builder, version: NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion) {\n            builder.addFieldInt16(0, version, NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset schemaOffset\n         */\n        static addSchema(builder: flatbuffers.Builder, schemaOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, schemaOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset dictionariesOffset\n         */\n        static addDictionaries(builder: flatbuffers.Builder, dictionariesOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(2, dictionariesOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startDictionariesVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(24, numElems, 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset recordBatchesOffset\n         */\n        static addRecordBatches(builder: flatbuffers.Builder, recordBatchesOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(3, recordBatchesOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startRecordBatchesVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(24, numElems, 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endFooter(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset offset\n         */\n        static finishFooterBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n            builder.finish(offset);\n        }\n\n        static createFooter(builder: flatbuffers.Builder, version: NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion, schemaOffset: flatbuffers.Offset, dictionariesOffset: flatbuffers.Offset, recordBatchesOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Footer.startFooter(builder);\n            Footer.addVersion(builder, version);\n            Footer.addSchema(builder, schemaOffset);\n            Footer.addDictionaries(builder, dictionariesOffset);\n            Footer.addRecordBatches(builder, recordBatchesOffset);\n            return Footer.endFooter(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Block {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Block\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Block {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * Index to the start of the RecordBlock (note this is past the Message header)\n         *\n         * @returns flatbuffers.Long\n         */\n        offset(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos);\n        }\n\n        /**\n         * Length of the metadata\n         *\n         * @returns number\n         */\n        metaDataLength(): number {\n            return this.bb!.readInt32(this.bb_pos + 8);\n        }\n\n        /**\n         * Length of the data (this is aligned so there can be a gap between this and\n         * the metatdata).\n         *\n         * @returns flatbuffers.Long\n         */\n        bodyLength(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos + 16);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long offset\n         * @param number metaDataLength\n         * @param flatbuffers.Long bodyLength\n         * @returns flatbuffers.Offset\n         */\n        static createBlock(builder: flatbuffers.Builder, offset: flatbuffers.Long, metaDataLength: number, bodyLength: flatbuffers.Long): flatbuffers.Offset {\n            builder.prep(8, 24);\n            builder.writeInt64(bodyLength);\n            builder.pad(4);\n            builder.writeInt32(metaDataLength);\n            builder.writeInt64(offset);\n            return builder.offset();\n        }\n\n    }\n}\n"]},"metadata":{},"sourceType":"module"}
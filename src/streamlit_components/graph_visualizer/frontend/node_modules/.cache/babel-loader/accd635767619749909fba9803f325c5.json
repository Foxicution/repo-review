{"ast":null,"code":"import _classCallCheck from \"/home/fox/Projects/Python/repo-review/streamlit_components/graph_visualizer/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/fox/Projects/Python/repo-review/streamlit_components/graph_visualizer/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"/home/fox/Projects/Python/repo-review/streamlit_components/graph_visualizer/frontend/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/home/fox/Projects/Python/repo-review/streamlit_components/graph_visualizer/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/fox/Projects/Python/repo-review/streamlit_components/graph_visualizer/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/fox/Projects/Python/repo-review/streamlit_components/graph_visualizer/frontend/node_modules/@babel/runtime/helpers/esm/createSuper\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { flatbuffers } from 'flatbuffers';\nvar Long = flatbuffers.Long;\nimport * as Schema_ from '../fb/Schema';\nimport { Visitor } from '../visitor';\nvar Null = Schema_.org.apache.arrow.flatbuf.Null;\nvar Int = Schema_.org.apache.arrow.flatbuf.Int;\nvar FloatingPoint = Schema_.org.apache.arrow.flatbuf.FloatingPoint;\nvar Binary = Schema_.org.apache.arrow.flatbuf.Binary;\nvar Bool = Schema_.org.apache.arrow.flatbuf.Bool;\nvar Utf8 = Schema_.org.apache.arrow.flatbuf.Utf8;\nvar Decimal = Schema_.org.apache.arrow.flatbuf.Decimal;\nvar Date = Schema_.org.apache.arrow.flatbuf.Date;\nvar Time = Schema_.org.apache.arrow.flatbuf.Time;\nvar Timestamp = Schema_.org.apache.arrow.flatbuf.Timestamp;\nvar Interval = Schema_.org.apache.arrow.flatbuf.Interval;\nvar List = Schema_.org.apache.arrow.flatbuf.List;\nvar Struct = Schema_.org.apache.arrow.flatbuf.Struct_;\nvar Union = Schema_.org.apache.arrow.flatbuf.Union;\nvar DictionaryEncoding = Schema_.org.apache.arrow.flatbuf.DictionaryEncoding;\nvar FixedSizeBinary = Schema_.org.apache.arrow.flatbuf.FixedSizeBinary;\nvar FixedSizeList = Schema_.org.apache.arrow.flatbuf.FixedSizeList;\nvar Map_ = Schema_.org.apache.arrow.flatbuf.Map;\n/** @ignore */\nexport var TypeAssembler = /*#__PURE__*/function (_Visitor) {\n  _inherits(TypeAssembler, _Visitor);\n  var _super = _createSuper(TypeAssembler);\n  function TypeAssembler() {\n    _classCallCheck(this, TypeAssembler);\n    return _super.apply(this, arguments);\n  }\n  _createClass(TypeAssembler, [{\n    key: \"visit\",\n    value: function visit(node, builder) {\n      return node == null || builder == null ? undefined : _get(_getPrototypeOf(TypeAssembler.prototype), \"visit\", this).call(this, node, builder);\n    }\n  }, {\n    key: \"visitNull\",\n    value: function visitNull(_node, b) {\n      Null.startNull(b);\n      return Null.endNull(b);\n    }\n  }, {\n    key: \"visitInt\",\n    value: function visitInt(node, b) {\n      Int.startInt(b);\n      Int.addBitWidth(b, node.bitWidth);\n      Int.addIsSigned(b, node.isSigned);\n      return Int.endInt(b);\n    }\n  }, {\n    key: \"visitFloat\",\n    value: function visitFloat(node, b) {\n      FloatingPoint.startFloatingPoint(b);\n      FloatingPoint.addPrecision(b, node.precision);\n      return FloatingPoint.endFloatingPoint(b);\n    }\n  }, {\n    key: \"visitBinary\",\n    value: function visitBinary(_node, b) {\n      Binary.startBinary(b);\n      return Binary.endBinary(b);\n    }\n  }, {\n    key: \"visitBool\",\n    value: function visitBool(_node, b) {\n      Bool.startBool(b);\n      return Bool.endBool(b);\n    }\n  }, {\n    key: \"visitUtf8\",\n    value: function visitUtf8(_node, b) {\n      Utf8.startUtf8(b);\n      return Utf8.endUtf8(b);\n    }\n  }, {\n    key: \"visitDecimal\",\n    value: function visitDecimal(node, b) {\n      Decimal.startDecimal(b);\n      Decimal.addScale(b, node.scale);\n      Decimal.addPrecision(b, node.precision);\n      return Decimal.endDecimal(b);\n    }\n  }, {\n    key: \"visitDate\",\n    value: function visitDate(node, b) {\n      Date.startDate(b);\n      Date.addUnit(b, node.unit);\n      return Date.endDate(b);\n    }\n  }, {\n    key: \"visitTime\",\n    value: function visitTime(node, b) {\n      Time.startTime(b);\n      Time.addUnit(b, node.unit);\n      Time.addBitWidth(b, node.bitWidth);\n      return Time.endTime(b);\n    }\n  }, {\n    key: \"visitTimestamp\",\n    value: function visitTimestamp(node, b) {\n      var timezone = node.timezone && b.createString(node.timezone) || undefined;\n      Timestamp.startTimestamp(b);\n      Timestamp.addUnit(b, node.unit);\n      if (timezone !== undefined) {\n        Timestamp.addTimezone(b, timezone);\n      }\n      return Timestamp.endTimestamp(b);\n    }\n  }, {\n    key: \"visitInterval\",\n    value: function visitInterval(node, b) {\n      Interval.startInterval(b);\n      Interval.addUnit(b, node.unit);\n      return Interval.endInterval(b);\n    }\n  }, {\n    key: \"visitList\",\n    value: function visitList(_node, b) {\n      List.startList(b);\n      return List.endList(b);\n    }\n  }, {\n    key: \"visitStruct\",\n    value: function visitStruct(_node, b) {\n      Struct.startStruct_(b);\n      return Struct.endStruct_(b);\n    }\n  }, {\n    key: \"visitUnion\",\n    value: function visitUnion(node, b) {\n      Union.startTypeIdsVector(b, node.typeIds.length);\n      var typeIds = Union.createTypeIdsVector(b, node.typeIds);\n      Union.startUnion(b);\n      Union.addMode(b, node.mode);\n      Union.addTypeIds(b, typeIds);\n      return Union.endUnion(b);\n    }\n  }, {\n    key: \"visitDictionary\",\n    value: function visitDictionary(node, b) {\n      var indexType = this.visit(node.indices, b);\n      DictionaryEncoding.startDictionaryEncoding(b);\n      DictionaryEncoding.addId(b, new Long(node.id, 0));\n      DictionaryEncoding.addIsOrdered(b, node.isOrdered);\n      if (indexType !== undefined) {\n        DictionaryEncoding.addIndexType(b, indexType);\n      }\n      return DictionaryEncoding.endDictionaryEncoding(b);\n    }\n  }, {\n    key: \"visitFixedSizeBinary\",\n    value: function visitFixedSizeBinary(node, b) {\n      FixedSizeBinary.startFixedSizeBinary(b);\n      FixedSizeBinary.addByteWidth(b, node.byteWidth);\n      return FixedSizeBinary.endFixedSizeBinary(b);\n    }\n  }, {\n    key: \"visitFixedSizeList\",\n    value: function visitFixedSizeList(node, b) {\n      FixedSizeList.startFixedSizeList(b);\n      FixedSizeList.addListSize(b, node.listSize);\n      return FixedSizeList.endFixedSizeList(b);\n    }\n  }, {\n    key: \"visitMap\",\n    value: function visitMap(node, b) {\n      Map_.startMap(b);\n      Map_.addKeysSorted(b, node.keysSorted);\n      return Map_.endMap(b);\n    }\n  }]);\n  return TypeAssembler;\n}(Visitor);\n/** @ignore */\nexport var instance = new TypeAssembler();","map":{"version":3,"mappings":"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","names":["flatbuffers","Long","Schema_","Visitor","Null","org","apache","arrow","flatbuf","Int","FloatingPoint","Binary","Bool","Utf8","Decimal","Date","Time","Timestamp","Interval","List","Struct","Struct_","Union","DictionaryEncoding","FixedSizeBinary","FixedSizeList","Map_","Map","TypeAssembler","node","builder","undefined","_node","b","startNull","endNull","startInt","addBitWidth","bitWidth","addIsSigned","isSigned","endInt","startFloatingPoint","addPrecision","precision","endFloatingPoint","startBinary","endBinary","startBool","endBool","startUtf8","endUtf8","startDecimal","addScale","scale","endDecimal","startDate","addUnit","unit","endDate","startTime","endTime","timezone","createString","startTimestamp","addTimezone","endTimestamp","startInterval","endInterval","startList","endList","startStruct_","endStruct_","startTypeIdsVector","typeIds","length","createTypeIdsVector","startUnion","addMode","mode","addTypeIds","endUnion","indexType","visit","indices","startDictionaryEncoding","addId","id","addIsOrdered","isOrdered","addIndexType","endDictionaryEncoding","startFixedSizeBinary","addByteWidth","byteWidth","endFixedSizeBinary","startFixedSizeList","addListSize","listSize","endFixedSizeList","startMap","addKeysSorted","keysSorted","endMap","instance"],"sources":["visitor/typeassembler.ts"],"sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { flatbuffers } from 'flatbuffers';\nimport Long = flatbuffers.Long;\nimport Builder = flatbuffers.Builder;\nimport * as Schema_ from '../fb/Schema';\n\nimport * as type from '../type';\nimport { Visitor } from '../visitor';\n\nimport Null = Schema_.org.apache.arrow.flatbuf.Null;\nimport Int = Schema_.org.apache.arrow.flatbuf.Int;\nimport FloatingPoint = Schema_.org.apache.arrow.flatbuf.FloatingPoint;\nimport Binary = Schema_.org.apache.arrow.flatbuf.Binary;\nimport Bool = Schema_.org.apache.arrow.flatbuf.Bool;\nimport Utf8 = Schema_.org.apache.arrow.flatbuf.Utf8;\nimport Decimal = Schema_.org.apache.arrow.flatbuf.Decimal;\nimport Date = Schema_.org.apache.arrow.flatbuf.Date;\nimport Time = Schema_.org.apache.arrow.flatbuf.Time;\nimport Timestamp = Schema_.org.apache.arrow.flatbuf.Timestamp;\nimport Interval = Schema_.org.apache.arrow.flatbuf.Interval;\nimport List = Schema_.org.apache.arrow.flatbuf.List;\nimport Struct = Schema_.org.apache.arrow.flatbuf.Struct_;\nimport Union = Schema_.org.apache.arrow.flatbuf.Union;\nimport DictionaryEncoding = Schema_.org.apache.arrow.flatbuf.DictionaryEncoding;\nimport FixedSizeBinary = Schema_.org.apache.arrow.flatbuf.FixedSizeBinary;\nimport FixedSizeList = Schema_.org.apache.arrow.flatbuf.FixedSizeList;\nimport Map_ = Schema_.org.apache.arrow.flatbuf.Map;\n\n/** @ignore */\nexport interface TypeAssembler extends Visitor {\n    visit<T extends type.DataType>(node: T, builder: Builder): number | undefined;\n}\n\n/** @ignore */\nexport class TypeAssembler extends Visitor {\n    public visit<T extends type.DataType>(node: T, builder: Builder): number | undefined {\n        return (node == null || builder == null) ? undefined : super.visit(node, builder);\n    }\n    public visitNull<T extends type.Null>(_node: T, b: Builder) {\n        Null.startNull(b);\n        return Null.endNull(b);\n    }\n    public visitInt<T extends type.Int>(node: T, b: Builder) {\n        Int.startInt(b);\n        Int.addBitWidth(b, node.bitWidth);\n        Int.addIsSigned(b, node.isSigned);\n        return Int.endInt(b);\n    }\n    public visitFloat<T extends type.Float>(node: T, b: Builder) {\n        FloatingPoint.startFloatingPoint(b);\n        FloatingPoint.addPrecision(b, node.precision);\n        return FloatingPoint.endFloatingPoint(b);\n    }\n    public visitBinary<T extends type.Binary>(_node: T, b: Builder) {\n        Binary.startBinary(b);\n        return Binary.endBinary(b);\n    }\n    public visitBool<T extends type.Bool>(_node: T, b: Builder) {\n        Bool.startBool(b);\n        return Bool.endBool(b);\n    }\n    public visitUtf8<T extends type.Utf8>(_node: T, b: Builder) {\n        Utf8.startUtf8(b);\n        return Utf8.endUtf8(b);\n    }\n    public visitDecimal<T extends type.Decimal>(node: T, b: Builder) {\n        Decimal.startDecimal(b);\n        Decimal.addScale(b, node.scale);\n        Decimal.addPrecision(b, node.precision);\n        return Decimal.endDecimal(b);\n    }\n    public visitDate<T extends type.Date_>(node: T, b: Builder) {\n        Date.startDate(b);\n        Date.addUnit(b, node.unit);\n        return Date.endDate(b);\n    }\n    public visitTime<T extends type.Time>(node: T, b: Builder) {\n        Time.startTime(b);\n        Time.addUnit(b, node.unit);\n        Time.addBitWidth(b, node.bitWidth);\n        return Time.endTime(b);\n    }\n    public visitTimestamp<T extends type.Timestamp>(node: T, b: Builder) {\n        const timezone = (node.timezone && b.createString(node.timezone)) || undefined;\n        Timestamp.startTimestamp(b);\n        Timestamp.addUnit(b, node.unit);\n        if (timezone !== undefined) {\n            Timestamp.addTimezone(b, timezone);\n        }\n        return Timestamp.endTimestamp(b);\n    }\n    public visitInterval<T extends type.Interval>(node: T, b: Builder) {\n        Interval.startInterval(b);\n        Interval.addUnit(b, node.unit);\n        return Interval.endInterval(b);\n    }\n    public visitList<T extends type.List>(_node: T, b: Builder) {\n        List.startList(b);\n        return List.endList(b);\n    }\n    public visitStruct<T extends type.Struct>(_node: T, b: Builder) {\n        Struct.startStruct_(b);\n        return Struct.endStruct_(b);\n    }\n    public visitUnion<T extends type.Union>(node: T, b: Builder) {\n        Union.startTypeIdsVector(b, node.typeIds.length);\n        const typeIds = Union.createTypeIdsVector(b, node.typeIds);\n        Union.startUnion(b);\n        Union.addMode(b, node.mode);\n        Union.addTypeIds(b, typeIds);\n        return Union.endUnion(b);\n    }\n    public visitDictionary<T extends type.Dictionary>(node: T, b: Builder) {\n        const indexType = this.visit(node.indices, b);\n        DictionaryEncoding.startDictionaryEncoding(b);\n        DictionaryEncoding.addId(b, new Long(node.id, 0));\n        DictionaryEncoding.addIsOrdered(b, node.isOrdered);\n        if (indexType !== undefined) {\n            DictionaryEncoding.addIndexType(b, indexType);\n        }\n        return DictionaryEncoding.endDictionaryEncoding(b);\n    }\n    public visitFixedSizeBinary<T extends type.FixedSizeBinary>(node: T, b: Builder) {\n        FixedSizeBinary.startFixedSizeBinary(b);\n        FixedSizeBinary.addByteWidth(b, node.byteWidth);\n        return FixedSizeBinary.endFixedSizeBinary(b);\n    }\n    public visitFixedSizeList<T extends type.FixedSizeList>(node: T, b: Builder) {\n        FixedSizeList.startFixedSizeList(b);\n        FixedSizeList.addListSize(b, node.listSize);\n        return FixedSizeList.endFixedSizeList(b);\n    }\n    public visitMap<T extends type.Map_>(node: T, b: Builder) {\n        Map_.startMap(b);\n        Map_.addKeysSorted(b, node.keysSorted);\n        return Map_.endMap(b);\n    }\n}\n\n/** @ignore */\nexport const instance = new TypeAssembler();\n"]},"metadata":{},"sourceType":"module"}
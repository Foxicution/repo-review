{"ast":null,"code":"import _createForOfIteratorHelper from \"/home/fox/Projects/Python/repo-review/streamlit_components/graph_visualizer/frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _possibleConstructorReturn from \"/home/fox/Projects/Python/repo-review/streamlit_components/graph_visualizer/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _assertThisInitialized from \"/home/fox/Projects/Python/repo-review/streamlit_components/graph_visualizer/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/fox/Projects/Python/repo-review/streamlit_components/graph_visualizer/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/fox/Projects/Python/repo-review/streamlit_components/graph_visualizer/frontend/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"/home/fox/Projects/Python/repo-review/streamlit_components/graph_visualizer/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/home/fox/Projects/Python/repo-review/streamlit_components/graph_visualizer/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/fox/Projects/Python/repo-review/streamlit_components/graph_visualizer/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/fox/Projects/Python/repo-review/streamlit_components/graph_visualizer/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { valueToString } from '../util/pretty';\n/** @ignore */\nvar kParent = Symbol.for('parent');\n/** @ignore */\nvar kRowIndex = Symbol.for('rowIndex');\n/** @ignore */\nvar kKeyToIdx = Symbol.for('keyToIdx');\n/** @ignore */\nvar kIdxToVal = Symbol.for('idxToVal');\n/** @ignore */\nvar kCustomInspect = Symbol.for('nodejs.util.inspect.custom');\nvar Row = /*#__PURE__*/function (_Symbol$iterator) {\n  function Row(parent, numKeys) {\n    _classCallCheck(this, Row);\n    this[kParent] = parent;\n    this.size = numKeys;\n  }\n  _createClass(Row, [{\n    key: \"entries\",\n    value: function entries() {\n      return this[Symbol.iterator]();\n    }\n  }, {\n    key: \"has\",\n    value: function has(key) {\n      return this.get(key) !== undefined;\n    }\n  }, {\n    key: \"get\",\n    value: function get(key) {\n      var val = undefined;\n      if (key !== null && key !== undefined) {\n        var ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n        var idx = ktoi.get(key);\n        if (idx !== undefined) {\n          var itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n          (val = itov[idx]) !== undefined || (itov[idx] = val = this.getValue(idx));\n        } else if ((idx = this.getIndex(key)) > -1) {\n          ktoi.set(key, idx);\n          var _itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n          (val = _itov[idx]) !== undefined || (_itov[idx] = val = this.getValue(idx));\n        }\n      }\n      return val;\n    }\n  }, {\n    key: \"set\",\n    value: function set(key, val) {\n      if (key !== null && key !== undefined) {\n        var ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n        var idx = ktoi.get(key);\n        if (idx === undefined) {\n          ktoi.set(key, idx = this.getIndex(key));\n        }\n        if (idx > -1) {\n          var itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n          itov[idx] = this.setValue(idx, val);\n        }\n      }\n      return this;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      throw new Error(\"Clearing \".concat(this[Symbol.toStringTag], \" not supported.\"));\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(_) {\n      throw new Error(\"Deleting \".concat(this[Symbol.toStringTag], \" values not supported.\"));\n    }\n  }, {\n    key: _Symbol$iterator,\n    value: /*#__PURE__*/_regeneratorRuntime().mark(function value() {\n      var ki, vi, ktoi, itov, k, v, i, kr, vr;\n      return _regeneratorRuntime().wrap(function value$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              ki = this.keys();\n              vi = this.values();\n              ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n              itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n              i = 0;\n            case 5:\n              if ((kr = ki.next()).done || (vr = vi.next()).done) {\n                _context.next = 15;\n                break;\n              }\n              k = kr.value;\n              v = vr.value;\n              itov[i] = v;\n              ktoi.has(k) || ktoi.set(k, i);\n              _context.next = 12;\n              return [k, v];\n            case 12:\n              ++i;\n              _context.next = 5;\n              break;\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, value, this);\n    })\n  }, {\n    key: \"forEach\",\n    value: function forEach(callbackfn, thisArg) {\n      var ki = this.keys();\n      var vi = this.values();\n      var callback = thisArg === undefined ? callbackfn : function (v, k, m) {\n        return callbackfn.call(thisArg, v, k, m);\n      };\n      var ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n      var itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n      for (var k, v, i = 0, kr, vr; !((kr = ki.next()).done || (vr = vi.next()).done); ++i) {\n        k = kr.value;\n        v = vr.value;\n        itov[i] = v;\n        ktoi.has(k) || ktoi.set(k, i);\n        callback(v, k, this);\n      }\n    }\n  }, {\n    key: \"toArray\",\n    value: function toArray() {\n      return _toConsumableArray(this.values());\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var obj = {};\n      this.forEach(function (val, key) {\n        return obj[key] = val;\n      });\n      return obj;\n    }\n  }, {\n    key: \"inspect\",\n    value: function inspect() {\n      return this.toString();\n    }\n  }, {\n    key: kCustomInspect,\n    value: function value() {\n      return this.toString();\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var str = [];\n      this.forEach(function (val, key) {\n        key = valueToString(key);\n        val = valueToString(val);\n        str.push(\"\".concat(key, \": \").concat(val));\n      });\n      return \"{ \".concat(str.join(', '), \" }\");\n    }\n  }]);\n  return Row;\n}(Symbol.iterator);\nRow[Symbol.toStringTag] = function (proto) {\n  var _Object$definePropert;\n  Object.defineProperties(proto, (_Object$definePropert = {\n    'size': {\n      writable: true,\n      enumerable: false,\n      configurable: false,\n      value: 0\n    }\n  }, _defineProperty(_Object$definePropert, kParent, {\n    writable: true,\n    enumerable: false,\n    configurable: false,\n    value: null\n  }), _defineProperty(_Object$definePropert, kRowIndex, {\n    writable: true,\n    enumerable: false,\n    configurable: false,\n    value: -1\n  }), _Object$definePropert));\n  return proto[Symbol.toStringTag] = 'Row';\n}(Row.prototype);\nexport var MapRow = /*#__PURE__*/function (_Row) {\n  _inherits(MapRow, _Row);\n  var _super = _createSuper(MapRow);\n  function MapRow(slice) {\n    var _this;\n    _classCallCheck(this, MapRow);\n    _this = _super.call(this, slice, slice.length);\n    return _possibleConstructorReturn(_this, createRowProxy(_assertThisInitialized(_this)));\n  }\n  _createClass(MapRow, [{\n    key: \"keys\",\n    value: function keys() {\n      return this[kParent].getChildAt(0)[Symbol.iterator]();\n    }\n  }, {\n    key: \"values\",\n    value: function values() {\n      return this[kParent].getChildAt(1)[Symbol.iterator]();\n    }\n  }, {\n    key: \"getKey\",\n    value: function getKey(idx) {\n      return this[kParent].getChildAt(0).get(idx);\n    }\n  }, {\n    key: \"getIndex\",\n    value: function getIndex(key) {\n      return this[kParent].getChildAt(0).indexOf(key);\n    }\n  }, {\n    key: \"getValue\",\n    value: function getValue(index) {\n      return this[kParent].getChildAt(1).get(index);\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(index, value) {\n      this[kParent].getChildAt(1).set(index, value);\n    }\n  }]);\n  return MapRow;\n}(Row);\nexport var StructRow = /*#__PURE__*/function (_Row2) {\n  _inherits(StructRow, _Row2);\n  var _super2 = _createSuper(StructRow);\n  function StructRow(parent) {\n    var _this2;\n    _classCallCheck(this, StructRow);\n    _this2 = _super2.call(this, parent, parent.type.children.length);\n    return _possibleConstructorReturn(_this2, defineRowProxyProperties(_assertThisInitialized(_this2)));\n  }\n  _createClass(StructRow, [{\n    key: \"keys\",\n    value: /*#__PURE__*/_regeneratorRuntime().mark(function keys() {\n      var _iterator, _step, field;\n      return _regeneratorRuntime().wrap(function keys$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _iterator = _createForOfIteratorHelper(this[kParent].type.children);\n              _context2.prev = 1;\n              _iterator.s();\n            case 3:\n              if ((_step = _iterator.n()).done) {\n                _context2.next = 9;\n                break;\n              }\n              field = _step.value;\n              _context2.next = 7;\n              return field.name;\n            case 7:\n              _context2.next = 3;\n              break;\n            case 9:\n              _context2.next = 14;\n              break;\n            case 11:\n              _context2.prev = 11;\n              _context2.t0 = _context2[\"catch\"](1);\n              _iterator.e(_context2.t0);\n            case 14:\n              _context2.prev = 14;\n              _iterator.f();\n              return _context2.finish(14);\n            case 17:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, keys, this, [[1, 11, 14, 17]]);\n    })\n  }, {\n    key: \"values\",\n    value: /*#__PURE__*/_regeneratorRuntime().mark(function values() {\n      var _iterator2, _step2, field;\n      return _regeneratorRuntime().wrap(function values$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _iterator2 = _createForOfIteratorHelper(this[kParent].type.children);\n              _context3.prev = 1;\n              _iterator2.s();\n            case 3:\n              if ((_step2 = _iterator2.n()).done) {\n                _context3.next = 9;\n                break;\n              }\n              field = _step2.value;\n              _context3.next = 7;\n              return this[field.name];\n            case 7:\n              _context3.next = 3;\n              break;\n            case 9:\n              _context3.next = 14;\n              break;\n            case 11:\n              _context3.prev = 11;\n              _context3.t0 = _context3[\"catch\"](1);\n              _iterator2.e(_context3.t0);\n            case 14:\n              _context3.prev = 14;\n              _iterator2.f();\n              return _context3.finish(14);\n            case 17:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, values, this, [[1, 11, 14, 17]]);\n    })\n  }, {\n    key: \"getKey\",\n    value: function getKey(idx) {\n      return this[kParent].type.children[idx].name;\n    }\n  }, {\n    key: \"getIndex\",\n    value: function getIndex(key) {\n      return this[kParent].type.children.findIndex(function (f) {\n        return f.name === key;\n      });\n    }\n  }, {\n    key: \"getValue\",\n    value: function getValue(index) {\n      return this[kParent].getChildAt(index).get(this[kRowIndex]);\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(index, value) {\n      return this[kParent].getChildAt(index).set(this[kRowIndex], value);\n    }\n  }]);\n  return StructRow;\n}(Row);\nObject.setPrototypeOf(Row.prototype, Map.prototype);\n/** @ignore */\nvar defineRowProxyProperties = function () {\n  var desc = {\n    enumerable: true,\n    configurable: false,\n    get: null,\n    set: null\n  };\n  return function (row) {\n    var idx = -1,\n      ktoi = row[kKeyToIdx] || (row[kKeyToIdx] = new Map());\n    var getter = function getter(key) {\n      return function () {\n        return this.get(key);\n      };\n    };\n    var setter = function setter(key) {\n      return function (val) {\n        return this.set(key, val);\n      };\n    };\n    var _iterator3 = _createForOfIteratorHelper(row.keys()),\n      _step3;\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var key = _step3.value;\n        ktoi.set(key, ++idx);\n        desc.get = getter(key);\n        desc.set = setter(key);\n        row.hasOwnProperty(key) || (desc.enumerable = true, Object.defineProperty(row, key, desc));\n        row.hasOwnProperty(idx) || (desc.enumerable = false, Object.defineProperty(row, idx, desc));\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n    desc.get = desc.set = null;\n    return row;\n  };\n}();\n/** @ignore */\nvar createRowProxy = function () {\n  if (typeof Proxy === 'undefined') {\n    return defineRowProxyProperties;\n  }\n  var has = Row.prototype.has;\n  var _get = Row.prototype.get;\n  var _set = Row.prototype.set;\n  var getKey = Row.prototype.getKey;\n  var RowProxyHandler = {\n    isExtensible: function isExtensible() {\n      return false;\n    },\n    deleteProperty: function deleteProperty() {\n      return false;\n    },\n    preventExtensions: function preventExtensions() {\n      return true;\n    },\n    ownKeys: function ownKeys(row) {\n      return _toConsumableArray(row.keys()).map(function (x) {\n        return \"\".concat(x);\n      });\n    },\n    has: function has(row, key) {\n      switch (key) {\n        case 'getKey':\n        case 'getIndex':\n        case 'getValue':\n        case 'setValue':\n        case 'toArray':\n        case 'toJSON':\n        case 'inspect':\n        case 'constructor':\n        case 'isPrototypeOf':\n        case 'propertyIsEnumerable':\n        case 'toString':\n        case 'toLocaleString':\n        case 'valueOf':\n        case 'size':\n        case 'has':\n        case 'get':\n        case 'set':\n        case 'clear':\n        case 'delete':\n        case 'keys':\n        case 'values':\n        case 'entries':\n        case 'forEach':\n        case '__proto__':\n        case '__defineGetter__':\n        case '__defineSetter__':\n        case 'hasOwnProperty':\n        case '__lookupGetter__':\n        case '__lookupSetter__':\n        case Symbol.iterator:\n        case Symbol.toStringTag:\n        case kParent:\n        case kRowIndex:\n        case kIdxToVal:\n        case kKeyToIdx:\n        case kCustomInspect:\n          return true;\n      }\n      if (typeof key === 'number' && !row.has(key)) {\n        key = row.getKey(key);\n      }\n      return row.has(key);\n    },\n    get: function get(row, key, receiver) {\n      switch (key) {\n        case 'getKey':\n        case 'getIndex':\n        case 'getValue':\n        case 'setValue':\n        case 'toArray':\n        case 'toJSON':\n        case 'inspect':\n        case 'constructor':\n        case 'isPrototypeOf':\n        case 'propertyIsEnumerable':\n        case 'toString':\n        case 'toLocaleString':\n        case 'valueOf':\n        case 'size':\n        case 'has':\n        case 'get':\n        case 'set':\n        case 'clear':\n        case 'delete':\n        case 'keys':\n        case 'values':\n        case 'entries':\n        case 'forEach':\n        case '__proto__':\n        case '__defineGetter__':\n        case '__defineSetter__':\n        case 'hasOwnProperty':\n        case '__lookupGetter__':\n        case '__lookupSetter__':\n        case Symbol.iterator:\n        case Symbol.toStringTag:\n        case kParent:\n        case kRowIndex:\n        case kIdxToVal:\n        case kKeyToIdx:\n        case kCustomInspect:\n          return Reflect.get(row, key, receiver);\n      }\n      if (typeof key === 'number' && !has.call(receiver, key)) {\n        key = getKey.call(receiver, key);\n      }\n      return _get.call(receiver, key);\n    },\n    set: function set(row, key, val, receiver) {\n      switch (key) {\n        case kParent:\n        case kRowIndex:\n        case kIdxToVal:\n        case kKeyToIdx:\n          return Reflect.set(row, key, val, receiver);\n        case 'getKey':\n        case 'getIndex':\n        case 'getValue':\n        case 'setValue':\n        case 'toArray':\n        case 'toJSON':\n        case 'inspect':\n        case 'constructor':\n        case 'isPrototypeOf':\n        case 'propertyIsEnumerable':\n        case 'toString':\n        case 'toLocaleString':\n        case 'valueOf':\n        case 'size':\n        case 'has':\n        case 'get':\n        case 'set':\n        case 'clear':\n        case 'delete':\n        case 'keys':\n        case 'values':\n        case 'entries':\n        case 'forEach':\n        case '__proto__':\n        case '__defineGetter__':\n        case '__defineSetter__':\n        case 'hasOwnProperty':\n        case '__lookupGetter__':\n        case '__lookupSetter__':\n        case Symbol.iterator:\n        case Symbol.toStringTag:\n          return false;\n      }\n      if (typeof key === 'number' && !has.call(receiver, key)) {\n        key = getKey.call(receiver, key);\n      }\n      return has.call(receiver, key) ? !!_set.call(receiver, key, val) : false;\n    }\n  };\n  return function (row) {\n    return new Proxy(row, RowProxyHandler);\n  };\n}();","map":{"version":3,"mappings":"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","names":["valueToString","kParent","Symbol","for","kRowIndex","kKeyToIdx","kIdxToVal","kCustomInspect","Row","parent","numKeys","size","iterator","key","get","undefined","val","ktoi","Map","idx","itov","Array","getValue","getIndex","set","setValue","Error","toStringTag","_","ki","keys","vi","values","i","kr","next","done","vr","k","value","v","has","callbackfn","thisArg","callback","m","call","obj","forEach","toString","str","push","join","proto","Object","defineProperties","writable","enumerable","configurable","prototype","MapRow","slice","length","createRowProxy","getChildAt","indexOf","index","StructRow","type","children","defineRowProxyProperties","field","name","findIndex","f","setPrototypeOf","desc","row","getter","setter","hasOwnProperty","defineProperty","Proxy","getKey","RowProxyHandler","isExtensible","deleteProperty","preventExtensions","ownKeys","map","x","receiver","Reflect"],"sources":["vector/row.ts"],"sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { StructVector } from './struct';\nimport { valueToString } from '../util/pretty';\nimport { DataType, Struct, RowLike } from '../type';\n\n/** @ignore */ const kParent = Symbol.for('parent');\n/** @ignore */ const kRowIndex = Symbol.for('rowIndex');\n/** @ignore */ const kKeyToIdx = Symbol.for('keyToIdx');\n/** @ignore */ const kIdxToVal = Symbol.for('idxToVal');\n/** @ignore */ const kCustomInspect = Symbol.for('nodejs.util.inspect.custom');\n\nabstract class Row<K extends PropertyKey = any, V = any> implements Map<K, V> {\n\n    public readonly size: number;\n    public readonly [Symbol.toStringTag]: string;\n\n    protected [kRowIndex]: number;\n    protected [kParent]: Vector<Struct>;\n    protected [kKeyToIdx]: Map<K, number>;\n    protected [kIdxToVal]: V[];\n\n    constructor(parent: Vector<Struct>, numKeys: number) {\n        this[kParent] = parent;\n        this.size = numKeys;\n    }\n\n    public abstract keys(): IterableIterator<K>;\n    public abstract values(): IterableIterator<V>;\n    public abstract getKey(idx: number): K;\n    public abstract getIndex(key: K): number;\n    public abstract getValue(idx: number): V;\n    public abstract setValue(idx: number, val: V): void;\n\n    public entries() { return this[Symbol.iterator](); }\n\n    public has(key: K) { return this.get(key) !== undefined; }\n\n    public get(key: K) {\n        let val = undefined;\n        if (key !== null && key !== undefined) {\n            const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n            let idx = ktoi.get(key);\n            if (idx !== undefined) {\n                const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n                ((val = itov[idx]) !== undefined) || (itov[idx] = val = this.getValue(idx));\n            } else if ((idx = this.getIndex(key)) > -1) {\n                ktoi.set(key, idx);\n                const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n                ((val = itov[idx]) !== undefined) || (itov[idx] = val = this.getValue(idx));\n            }\n        }\n        return val;\n    }\n\n    public set(key: K, val: V) {\n        if (key !== null && key !== undefined) {\n            const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n            let idx = ktoi.get(key);\n            if (idx === undefined) {\n                ktoi.set(key, idx = this.getIndex(key));\n            }\n            if (idx > -1) {\n                const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n                itov[idx] = <any> this.setValue(idx, val);\n            }\n        }\n        return this;\n    }\n\n    public clear(): void { throw new Error(`Clearing ${this[Symbol.toStringTag]} not supported.`); }\n\n    public delete(_: K): boolean { throw new Error(`Deleting ${this[Symbol.toStringTag]} values not supported.`); }\n\n    public *[Symbol.iterator](): IterableIterator<[K, V]> {\n\n        const ki = this.keys();\n        const vi = this.values();\n        const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n        const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n\n        for (let k: K, v: V, i = 0, kr: IteratorResult<K>, vr: IteratorResult<V>;\n            !((kr = ki.next()).done || (vr = vi.next()).done);\n            ++i\n        ) {\n            k = kr.value;\n            v = vr.value;\n            itov[i] = v;\n            ktoi.has(k) || ktoi.set(k, i);\n            yield [k, v];\n        }\n    }\n\n    public forEach(callbackfn: (value: V, key: K, map: Map<K, V>) => void, thisArg?: any): void {\n\n        const ki = this.keys();\n        const vi = this.values();\n        const callback = thisArg === undefined ? callbackfn :\n            (v: V, k: K, m: Map<K, V>) => callbackfn.call(thisArg, v, k, m);\n        const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n        const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n\n        for (let k: K, v: V, i = 0, kr: IteratorResult<K>, vr: IteratorResult<V>;\n            !((kr = ki.next()).done || (vr = vi.next()).done);\n            ++i\n        ) {\n            k = kr.value;\n            v = vr.value;\n            itov[i] = v;\n            ktoi.has(k) || ktoi.set(k, i);\n            callback(v, k, this);\n        }\n    }\n\n    public toArray() { return [...this.values()]; }\n    public toJSON() {\n        const obj = {} as any;\n        this.forEach((val, key) => obj[key] = val);\n        return obj;\n    }\n\n    public inspect() { return this.toString(); }\n    public [kCustomInspect]() { return this.toString(); }\n    public toString() {\n        const str: string[] = [];\n        this.forEach((val, key) => {\n            key = valueToString(key);\n            val = valueToString(val);\n            str.push(`${key}: ${val}`);\n        });\n        return `{ ${str.join(', ')} }`;\n    }\n\n    protected static [Symbol.toStringTag] = ((proto: Row) => {\n        Object.defineProperties(proto, {\n            'size': { writable: true, enumerable: false, configurable: false, value: 0 },\n            [kParent]: { writable: true, enumerable: false, configurable: false, value: null },\n            [kRowIndex]: { writable: true, enumerable: false, configurable: false, value: -1 },\n        });\n        return (proto as any)[Symbol.toStringTag] = 'Row';\n    })(Row.prototype);\n}\n\nexport class MapRow<K extends DataType = any, V extends DataType = any> extends Row<K['TValue'], V['TValue'] | null> {\n    constructor(slice: Vector<Struct<{ key: K, value: V }>>) {\n        super(slice, slice.length);\n        return createRowProxy(this);\n    }\n    public keys() {\n        return this[kParent].getChildAt(0)![Symbol.iterator]();\n    }\n    public values() {\n        return this[kParent].getChildAt(1)![Symbol.iterator]();\n    }\n    public getKey(idx: number): K['TValue'] {\n        return this[kParent].getChildAt(0)!.get(idx);\n    }\n    public getIndex(key: K['TValue']): number {\n        return this[kParent].getChildAt(0)!.indexOf(key);\n    }\n    public getValue(index: number): V['TValue'] | null {\n        return this[kParent].getChildAt(1)!.get(index);\n    }\n    public setValue(index: number, value: V['TValue'] | null): void {\n        this[kParent].getChildAt(1)!.set(index, value);\n    }\n}\n\nexport class StructRow<T extends { [key: string]: DataType } = any> extends Row<keyof T, T[keyof T]['TValue'] | null> {\n    constructor(parent: StructVector<T>) {\n        super(parent, parent.type.children.length);\n        return defineRowProxyProperties(this);\n    }\n    public *keys() {\n        for (const field of this[kParent].type.children) {\n            yield field.name as keyof T;\n        }\n    }\n    public *values() {\n        for (const field of this[kParent].type.children) {\n            yield (this as RowLike<T>)[field.name];\n        }\n    }\n    public getKey(idx: number): keyof T {\n        return this[kParent].type.children[idx].name as keyof T;\n    }\n    public getIndex(key: keyof T): number {\n        return this[kParent].type.children.findIndex((f) => f.name === key);\n    }\n    public getValue(index: number): T[keyof T]['TValue'] | null {\n        return this[kParent].getChildAt(index)!.get(this[kRowIndex]);\n    }\n    public setValue(index: number, value: T[keyof T]['TValue'] | null): void {\n        return this[kParent].getChildAt(index)!.set(this[kRowIndex], value);\n    }\n}\n\nObject.setPrototypeOf(Row.prototype, Map.prototype);\n\n/** @ignore */\nconst defineRowProxyProperties = (() => {\n    const desc = { enumerable: true, configurable: false, get: null as any, set: null as any };\n    return <T extends Row>(row: T) => {\n        let idx = -1, ktoi = row[kKeyToIdx] || (row[kKeyToIdx] = new Map());\n        const getter = (key: any) => function(this: T) { return this.get(key); };\n        const setter = (key: any) => function(this: T, val: any) { return this.set(key, val); };\n        for (const key of row.keys()) {\n            ktoi.set(key, ++idx);\n            desc.get = getter(key);\n            desc.set = setter(key);\n            row.hasOwnProperty(key) || (desc.enumerable = true, Object.defineProperty(row, key, desc));\n            row.hasOwnProperty(idx) || (desc.enumerable = false, Object.defineProperty(row, idx, desc));\n        }\n        desc.get = desc.set = null;\n        return row;\n    };\n})();\n\n/** @ignore */\nconst createRowProxy = (() => {\n    if (typeof Proxy === 'undefined') {\n        return defineRowProxyProperties;\n    }\n    const has = Row.prototype.has;\n    const get = Row.prototype.get;\n    const set = Row.prototype.set;\n    const getKey = Row.prototype.getKey;\n    const RowProxyHandler: ProxyHandler<Row> = {\n        isExtensible() { return false; },\n        deleteProperty() { return false; },\n        preventExtensions() { return true; },\n        ownKeys(row: Row) { return [...row.keys()].map((x) => `${x}`); },\n        has(row: Row, key: PropertyKey) {\n            switch (key) {\n                case 'getKey': case 'getIndex': case 'getValue': case 'setValue': case 'toArray': case 'toJSON': case 'inspect':\n                case 'constructor': case 'isPrototypeOf': case 'propertyIsEnumerable': case 'toString': case 'toLocaleString': case 'valueOf':\n                case 'size': case 'has': case 'get': case 'set': case 'clear': case 'delete': case 'keys': case 'values': case 'entries': case 'forEach':\n                case '__proto__': case '__defineGetter__': case '__defineSetter__': case 'hasOwnProperty': case '__lookupGetter__': case '__lookupSetter__':\n                case Symbol.iterator: case Symbol.toStringTag: case kParent: case kRowIndex: case kIdxToVal: case kKeyToIdx: case kCustomInspect:\n                    return true;\n            }\n            if (typeof key === 'number' && !row.has(key)) {\n                key = row.getKey(key);\n            }\n            return row.has(key);\n        },\n        get(row: Row, key: PropertyKey, receiver: any) {\n            switch (key) {\n                case 'getKey': case 'getIndex': case 'getValue': case 'setValue': case 'toArray': case 'toJSON': case 'inspect':\n                case 'constructor': case 'isPrototypeOf': case 'propertyIsEnumerable': case 'toString': case 'toLocaleString': case 'valueOf':\n                case 'size': case 'has': case 'get': case 'set': case 'clear': case 'delete': case 'keys': case 'values': case 'entries': case 'forEach':\n                case '__proto__': case '__defineGetter__': case '__defineSetter__': case 'hasOwnProperty': case '__lookupGetter__': case '__lookupSetter__':\n                case Symbol.iterator: case Symbol.toStringTag: case kParent: case kRowIndex: case kIdxToVal: case kKeyToIdx: case kCustomInspect:\n                    return Reflect.get(row, key, receiver);\n            }\n            if (typeof key === 'number' && !has.call(receiver, key)) {\n                key = getKey.call(receiver, key);\n            }\n            return get.call(receiver, key);\n        },\n        set(row: Row, key: PropertyKey, val: any, receiver: any) {\n            switch (key) {\n                case kParent: case kRowIndex: case kIdxToVal: case kKeyToIdx:\n                    return Reflect.set(row, key, val, receiver);\n                case 'getKey': case 'getIndex': case 'getValue': case 'setValue': case 'toArray': case 'toJSON': case 'inspect':\n                case 'constructor': case 'isPrototypeOf': case 'propertyIsEnumerable': case 'toString': case 'toLocaleString': case 'valueOf':\n                case 'size': case 'has': case 'get': case 'set': case 'clear': case 'delete': case 'keys': case 'values': case 'entries': case 'forEach':\n                case '__proto__': case '__defineGetter__': case '__defineSetter__': case 'hasOwnProperty': case '__lookupGetter__': case '__lookupSetter__':\n                case Symbol.iterator: case Symbol.toStringTag:\n                    return false;\n            }\n            if (typeof key === 'number' && !has.call(receiver, key)) {\n                key = getKey.call(receiver, key);\n            }\n            return has.call(receiver, key) ? !!set.call(receiver, key, val) : false;\n        },\n    };\n    return <T extends Row>(row: T) => new Proxy(row, RowProxyHandler) as T;\n})();\n"]},"metadata":{},"sourceType":"module"}
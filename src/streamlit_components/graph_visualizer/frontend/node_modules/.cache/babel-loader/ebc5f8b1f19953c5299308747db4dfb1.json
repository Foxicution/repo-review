{"ast":null,"code":"import _toConsumableArray from \"/home/fox/Projects/Python/repo-review/streamlit_components/graph_visualizer/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/fox/Projects/Python/repo-review/streamlit_components/graph_visualizer/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/fox/Projects/Python/repo-review/streamlit_components/graph_visualizer/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"/home/fox/Projects/Python/repo-review/streamlit_components/graph_visualizer/frontend/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/home/fox/Projects/Python/repo-review/streamlit_components/graph_visualizer/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/fox/Projects/Python/repo-review/streamlit_components/graph_visualizer/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/fox/Projects/Python/repo-review/streamlit_components/graph_visualizer/frontend/node_modules/@babel/runtime/helpers/esm/createSuper\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Visitor } from '../visitor';\nimport { ArrowType, Precision, DateUnit, TimeUnit, IntervalUnit, UnionMode } from '../enum';\n/** @ignore */\nexport var JSONTypeAssembler = /*#__PURE__*/function (_Visitor) {\n  _inherits(JSONTypeAssembler, _Visitor);\n  var _super = _createSuper(JSONTypeAssembler);\n  function JSONTypeAssembler() {\n    _classCallCheck(this, JSONTypeAssembler);\n    return _super.apply(this, arguments);\n  }\n  _createClass(JSONTypeAssembler, [{\n    key: \"visit\",\n    value: function visit(node) {\n      return node == null ? undefined : _get(_getPrototypeOf(JSONTypeAssembler.prototype), \"visit\", this).call(this, node);\n    }\n  }, {\n    key: \"visitNull\",\n    value: function visitNull(_ref) {\n      var typeId = _ref.typeId;\n      return {\n        'name': ArrowType[typeId].toLowerCase()\n      };\n    }\n  }, {\n    key: \"visitInt\",\n    value: function visitInt(_ref2) {\n      var typeId = _ref2.typeId,\n        bitWidth = _ref2.bitWidth,\n        isSigned = _ref2.isSigned;\n      return {\n        'name': ArrowType[typeId].toLowerCase(),\n        'bitWidth': bitWidth,\n        'isSigned': isSigned\n      };\n    }\n  }, {\n    key: \"visitFloat\",\n    value: function visitFloat(_ref3) {\n      var typeId = _ref3.typeId,\n        precision = _ref3.precision;\n      return {\n        'name': ArrowType[typeId].toLowerCase(),\n        'precision': Precision[precision]\n      };\n    }\n  }, {\n    key: \"visitBinary\",\n    value: function visitBinary(_ref4) {\n      var typeId = _ref4.typeId;\n      return {\n        'name': ArrowType[typeId].toLowerCase()\n      };\n    }\n  }, {\n    key: \"visitBool\",\n    value: function visitBool(_ref5) {\n      var typeId = _ref5.typeId;\n      return {\n        'name': ArrowType[typeId].toLowerCase()\n      };\n    }\n  }, {\n    key: \"visitUtf8\",\n    value: function visitUtf8(_ref6) {\n      var typeId = _ref6.typeId;\n      return {\n        'name': ArrowType[typeId].toLowerCase()\n      };\n    }\n  }, {\n    key: \"visitDecimal\",\n    value: function visitDecimal(_ref7) {\n      var typeId = _ref7.typeId,\n        scale = _ref7.scale,\n        precision = _ref7.precision;\n      return {\n        'name': ArrowType[typeId].toLowerCase(),\n        'scale': scale,\n        'precision': precision\n      };\n    }\n  }, {\n    key: \"visitDate\",\n    value: function visitDate(_ref8) {\n      var typeId = _ref8.typeId,\n        unit = _ref8.unit;\n      return {\n        'name': ArrowType[typeId].toLowerCase(),\n        'unit': DateUnit[unit]\n      };\n    }\n  }, {\n    key: \"visitTime\",\n    value: function visitTime(_ref9) {\n      var typeId = _ref9.typeId,\n        unit = _ref9.unit,\n        bitWidth = _ref9.bitWidth;\n      return {\n        'name': ArrowType[typeId].toLowerCase(),\n        'unit': TimeUnit[unit],\n        bitWidth: bitWidth\n      };\n    }\n  }, {\n    key: \"visitTimestamp\",\n    value: function visitTimestamp(_ref10) {\n      var typeId = _ref10.typeId,\n        timezone = _ref10.timezone,\n        unit = _ref10.unit;\n      return {\n        'name': ArrowType[typeId].toLowerCase(),\n        'unit': TimeUnit[unit],\n        timezone: timezone\n      };\n    }\n  }, {\n    key: \"visitInterval\",\n    value: function visitInterval(_ref11) {\n      var typeId = _ref11.typeId,\n        unit = _ref11.unit;\n      return {\n        'name': ArrowType[typeId].toLowerCase(),\n        'unit': IntervalUnit[unit]\n      };\n    }\n  }, {\n    key: \"visitList\",\n    value: function visitList(_ref12) {\n      var typeId = _ref12.typeId;\n      return {\n        'name': ArrowType[typeId].toLowerCase()\n      };\n    }\n  }, {\n    key: \"visitStruct\",\n    value: function visitStruct(_ref13) {\n      var typeId = _ref13.typeId;\n      return {\n        'name': ArrowType[typeId].toLowerCase()\n      };\n    }\n  }, {\n    key: \"visitUnion\",\n    value: function visitUnion(_ref14) {\n      var typeId = _ref14.typeId,\n        mode = _ref14.mode,\n        typeIds = _ref14.typeIds;\n      return {\n        'name': ArrowType[typeId].toLowerCase(),\n        'mode': UnionMode[mode],\n        'typeIds': _toConsumableArray(typeIds)\n      };\n    }\n  }, {\n    key: \"visitDictionary\",\n    value: function visitDictionary(node) {\n      return this.visit(node.dictionary);\n    }\n  }, {\n    key: \"visitFixedSizeBinary\",\n    value: function visitFixedSizeBinary(_ref15) {\n      var typeId = _ref15.typeId,\n        byteWidth = _ref15.byteWidth;\n      return {\n        'name': ArrowType[typeId].toLowerCase(),\n        'byteWidth': byteWidth\n      };\n    }\n  }, {\n    key: \"visitFixedSizeList\",\n    value: function visitFixedSizeList(_ref16) {\n      var typeId = _ref16.typeId,\n        listSize = _ref16.listSize;\n      return {\n        'name': ArrowType[typeId].toLowerCase(),\n        'listSize': listSize\n      };\n    }\n  }, {\n    key: \"visitMap\",\n    value: function visitMap(_ref17) {\n      var typeId = _ref17.typeId,\n        keysSorted = _ref17.keysSorted;\n      return {\n        'name': ArrowType[typeId].toLowerCase(),\n        'keysSorted': keysSorted\n      };\n    }\n  }]);\n  return JSONTypeAssembler;\n}(Visitor);","map":{"version":3,"mappings":"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","names":["Visitor","ArrowType","Precision","DateUnit","TimeUnit","IntervalUnit","UnionMode","JSONTypeAssembler","node","undefined","typeId","toLowerCase","bitWidth","isSigned","precision","scale","unit","timezone","mode","typeIds","visit","dictionary","byteWidth","listSize","keysSorted"],"sources":["visitor/jsontypeassembler.ts"],"sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport * as type from '../type';\nimport { Visitor } from '../visitor';\nimport { ArrowType, Precision, DateUnit, TimeUnit, IntervalUnit, UnionMode } from '../enum';\n\n/** @ignore */\nexport interface JSONTypeAssembler extends Visitor {\n    visit<T extends type.DataType>(node: T): object | undefined;\n}\n\n/** @ignore */\nexport class JSONTypeAssembler extends Visitor {\n    public visit<T extends type.DataType>(node: T): object | undefined {\n        return node == null ? undefined : super.visit(node);\n    }\n    public visitNull<T extends type.Null>({ typeId }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase() };\n    }\n    public visitInt<T extends type.Int>({ typeId, bitWidth, isSigned }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase(), 'bitWidth': bitWidth, 'isSigned': isSigned };\n    }\n    public visitFloat<T extends type.Float>({ typeId, precision }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase(), 'precision': Precision[precision] };\n    }\n    public visitBinary<T extends type.Binary>({ typeId }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase() };\n    }\n    public visitBool<T extends type.Bool>({ typeId }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase() };\n    }\n    public visitUtf8<T extends type.Utf8>({ typeId }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase() };\n    }\n    public visitDecimal<T extends type.Decimal>({ typeId, scale, precision }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase(), 'scale': scale, 'precision': precision };\n    }\n    public visitDate<T extends type.Date_>({ typeId, unit }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase(), 'unit': DateUnit[unit] };\n    }\n    public visitTime<T extends type.Time>({ typeId, unit, bitWidth }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase(), 'unit': TimeUnit[unit], bitWidth };\n    }\n    public visitTimestamp<T extends type.Timestamp>({ typeId, timezone, unit }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase(), 'unit': TimeUnit[unit], timezone };\n    }\n    public visitInterval<T extends type.Interval>({ typeId, unit }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase(), 'unit': IntervalUnit[unit] };\n    }\n    public visitList<T extends type.List>({ typeId }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase() };\n    }\n    public visitStruct<T extends type.Struct>({ typeId }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase() };\n    }\n    public visitUnion<T extends type.Union>({ typeId, mode, typeIds }: T) {\n        return {\n            'name': ArrowType[typeId].toLowerCase(),\n            'mode': UnionMode[mode],\n            'typeIds': [...typeIds]\n        };\n    }\n    public visitDictionary<T extends type.Dictionary>(node: T) {\n        return this.visit(node.dictionary);\n    }\n    public visitFixedSizeBinary<T extends type.FixedSizeBinary>({ typeId, byteWidth }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase(), 'byteWidth': byteWidth };\n    }\n    public visitFixedSizeList<T extends type.FixedSizeList>({ typeId, listSize }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase(), 'listSize': listSize };\n    }\n    public visitMap<T extends type.Map_>({ typeId, keysSorted }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase(), 'keysSorted': keysSorted };\n    }\n}\n"]},"metadata":{},"sourceType":"module"}
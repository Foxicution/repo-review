{"ast":null,"code":"import _classCallCheck from \"/home/fox/Projects/Python/repo-review/streamlit_components/graph_visualizer/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/fox/Projects/Python/repo-review/streamlit_components/graph_visualizer/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/fox/Projects/Python/repo-review/streamlit_components/graph_visualizer/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/fox/Projects/Python/repo-review/streamlit_components/graph_visualizer/frontend/node_modules/@babel/runtime/helpers/esm/createSuper\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { MapRow } from './row';\nimport { Vector } from '../vector';\nimport { BaseVector } from './base';\nimport { List } from '../type';\n/** @ignore */\nexport var MapVector = /*#__PURE__*/function (_BaseVector) {\n  _inherits(MapVector, _BaseVector);\n  var _super = _createSuper(MapVector);\n  function MapVector() {\n    _classCallCheck(this, MapVector);\n    return _super.apply(this, arguments);\n  }\n  _createClass(MapVector, [{\n    key: \"asList\",\n    value: function asList() {\n      var child = this.type.children[0];\n      return Vector.new(this.data.clone(new List(child)));\n    }\n  }, {\n    key: \"bind\",\n    value: function bind(index) {\n      var child = this.getChildAt(0);\n      var _this$valueOffsets = this.valueOffsets,\n        begin = _this$valueOffsets[index],\n        end = _this$valueOffsets[index + 1];\n      return new MapRow(child.slice(begin, end));\n    }\n  }]);\n  return MapVector;\n}(BaseVector);","map":{"version":3,"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,MAAM,QAAQ,OAAO;AAE9B,SAASC,MAAM,QAAQ,WAAW;AAClC,SAASC,UAAU,QAAQ,QAAQ;AACnC,SAAiCC,IAAI,QAAQ,SAAS;AAEtD;AACA,WAAaC,SAA8D;EAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA,OAChE,kBAAM;MACT,IAAMC,KAAK,GAAG,IAAI,CAACC,IAAI,CAACC,QAAQ,CAAC,CAAC,CAAwC;MAC1E,OAAON,MAAM,CAACO,GAAG,CAAC,IAAI,CAACC,IAAI,CAACC,KAAK,CAAC,IAAIP,IAAI,CAA+BE,KAAK,CAAC,CAAC,CAAC;IACrF;EAAC;IAAA;IAAA,OACM,cAAKM,KAAa;MACrB,IAAMN,KAAK,GAAG,IAAI,CAACO,UAAU,CAA+B,CAAC,CAAC;MAC9D,yBAA6C,IAAI,CAACC,YAAY;QAA7CC,KAAK,sBAAbH,KAAK;QAAuBI,GAAG,sBAAfJ,KAAK,GAAG,CAAC;MAClC,OAAO,IAAIX,MAAM,CAACK,KAAM,CAACW,KAAK,CAACF,KAAK,EAAEC,GAAG,CAAC,CAAC;IAC/C;EAAC;EAAA;AAAA,EAT8Eb,UAAsB","names":["MapRow","Vector","BaseVector","List","MapVector","child","type","children","new","data","clone","index","getChildAt","valueOffsets","begin","end","slice"],"sources":["vector/map.ts"],"sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { MapRow } from './row';\nimport { Field } from '../schema';\nimport { Vector } from '../vector';\nimport { BaseVector } from './base';\nimport { DataType, Map_, Struct, List } from '../type';\n\n/** @ignore */\nexport class MapVector<K extends DataType = any, V extends DataType = any> extends BaseVector<Map_<K, V>> {\n    public asList() {\n        const child = this.type.children[0] as Field<Struct<{ key: K, value: V }>>;\n        return Vector.new(this.data.clone(new List<Struct<{ key: K, value: V }>>(child)));\n    }\n    public bind(index: number): Map_<K, V>['TValue'] {\n        const child = this.getChildAt<Struct<{ key: K, value: V }>>(0);\n        const { [index]: begin, [index + 1]: end } = this.valueOffsets;\n        return new MapRow(child!.slice(begin, end));\n    }\n}\n"]},"metadata":{},"sourceType":"module"}
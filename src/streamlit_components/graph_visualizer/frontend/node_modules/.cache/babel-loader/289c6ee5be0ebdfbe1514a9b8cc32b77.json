{"ast":null,"code":"import _classCallCheck from \"/home/fox/Projects/Python/repo-review/streamlit_components/graph_visualizer/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/fox/Projects/Python/repo-review/streamlit_components/graph_visualizer/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\n// automatically generated by the FlatBuffers compiler, do not modify\nimport * as NS7624605610262437867 from './Schema';\n/**\n * ----------------------------------------------------------------------\n * Arrow File metadata\n *\n *\n * @constructor\n */\nexport var org;\n(function (org) {\n  var apache;\n  (function (apache) {\n    var arrow;\n    (function (arrow) {\n      var flatbuf;\n      (function (flatbuf) {\n        var Footer = /*#__PURE__*/function () {\n          function Footer() {\n            _classCallCheck(this, Footer);\n            this.bb = null;\n            this.bb_pos = 0;\n          }\n          /**\n           * @param number i\n           * @param flatbuffers.ByteBuffer bb\n           * @returns Footer\n           */\n          _createClass(Footer, [{\n            key: \"__init\",\n            value: function __init(i, bb) {\n              this.bb_pos = i;\n              this.bb = bb;\n              return this;\n            }\n            /**\n             * @param flatbuffers.ByteBuffer bb\n             * @param Footer= obj\n             * @returns Footer\n             */\n          }, {\n            key: \"version\",\n            value:\n            /**\n             * @returns org.apache.arrow.flatbuf.MetadataVersion\n             */\n            function version() {\n              var offset = this.bb.__offset(this.bb_pos, 4);\n              return offset ? /**  */this.bb.readInt16(this.bb_pos + offset) : NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1;\n            }\n            /**\n             * @param org.apache.arrow.flatbuf.Schema= obj\n             * @returns org.apache.arrow.flatbuf.Schema|null\n             */\n          }, {\n            key: \"schema\",\n            value: function schema(obj) {\n              var offset = this.bb.__offset(this.bb_pos, 6);\n              return offset ? (obj || new NS7624605610262437867.org.apache.arrow.flatbuf.Schema()).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\n            }\n            /**\n             * @param number index\n             * @param org.apache.arrow.flatbuf.Block= obj\n             * @returns org.apache.arrow.flatbuf.Block\n             */\n          }, {\n            key: \"dictionaries\",\n            value: function dictionaries(index, obj) {\n              var offset = this.bb.__offset(this.bb_pos, 8);\n              return offset ? (obj || new org.apache.arrow.flatbuf.Block()).__init(this.bb.__vector(this.bb_pos + offset) + index * 24, this.bb) : null;\n            }\n            /**\n             * @returns number\n             */\n          }, {\n            key: \"dictionariesLength\",\n            value: function dictionariesLength() {\n              var offset = this.bb.__offset(this.bb_pos, 8);\n              return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n            }\n            /**\n             * @param number index\n             * @param org.apache.arrow.flatbuf.Block= obj\n             * @returns org.apache.arrow.flatbuf.Block\n             */\n          }, {\n            key: \"recordBatches\",\n            value: function recordBatches(index, obj) {\n              var offset = this.bb.__offset(this.bb_pos, 10);\n              return offset ? (obj || new org.apache.arrow.flatbuf.Block()).__init(this.bb.__vector(this.bb_pos + offset) + index * 24, this.bb) : null;\n            }\n            /**\n             * @returns number\n             */\n          }, {\n            key: \"recordBatchesLength\",\n            value: function recordBatchesLength() {\n              var offset = this.bb.__offset(this.bb_pos, 10);\n              return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n            }\n            /**\n             * @param flatbuffers.Builder builder\n             */\n          }], [{\n            key: \"getRootAsFooter\",\n            value: function getRootAsFooter(bb, obj) {\n              return (obj || new Footer()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n            }\n          }, {\n            key: \"startFooter\",\n            value: function startFooter(builder) {\n              builder.startObject(4);\n            }\n            /**\n             * @param flatbuffers.Builder builder\n             * @param org.apache.arrow.flatbuf.MetadataVersion version\n             */\n          }, {\n            key: \"addVersion\",\n            value: function addVersion(builder, version) {\n              builder.addFieldInt16(0, version, NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1);\n            }\n            /**\n             * @param flatbuffers.Builder builder\n             * @param flatbuffers.Offset schemaOffset\n             */\n          }, {\n            key: \"addSchema\",\n            value: function addSchema(builder, schemaOffset) {\n              builder.addFieldOffset(1, schemaOffset, 0);\n            }\n            /**\n             * @param flatbuffers.Builder builder\n             * @param flatbuffers.Offset dictionariesOffset\n             */\n          }, {\n            key: \"addDictionaries\",\n            value: function addDictionaries(builder, dictionariesOffset) {\n              builder.addFieldOffset(2, dictionariesOffset, 0);\n            }\n            /**\n             * @param flatbuffers.Builder builder\n             * @param number numElems\n             */\n          }, {\n            key: \"startDictionariesVector\",\n            value: function startDictionariesVector(builder, numElems) {\n              builder.startVector(24, numElems, 8);\n            }\n            /**\n             * @param flatbuffers.Builder builder\n             * @param flatbuffers.Offset recordBatchesOffset\n             */\n          }, {\n            key: \"addRecordBatches\",\n            value: function addRecordBatches(builder, recordBatchesOffset) {\n              builder.addFieldOffset(3, recordBatchesOffset, 0);\n            }\n            /**\n             * @param flatbuffers.Builder builder\n             * @param number numElems\n             */\n          }, {\n            key: \"startRecordBatchesVector\",\n            value: function startRecordBatchesVector(builder, numElems) {\n              builder.startVector(24, numElems, 8);\n            }\n            /**\n             * @param flatbuffers.Builder builder\n             * @returns flatbuffers.Offset\n             */\n          }, {\n            key: \"endFooter\",\n            value: function endFooter(builder) {\n              var offset = builder.endObject();\n              return offset;\n            }\n            /**\n             * @param flatbuffers.Builder builder\n             * @param flatbuffers.Offset offset\n             */\n          }, {\n            key: \"finishFooterBuffer\",\n            value: function finishFooterBuffer(builder, offset) {\n              builder.finish(offset);\n            }\n          }, {\n            key: \"createFooter\",\n            value: function createFooter(builder, version, schemaOffset, dictionariesOffset, recordBatchesOffset) {\n              Footer.startFooter(builder);\n              Footer.addVersion(builder, version);\n              Footer.addSchema(builder, schemaOffset);\n              Footer.addDictionaries(builder, dictionariesOffset);\n              Footer.addRecordBatches(builder, recordBatchesOffset);\n              return Footer.endFooter(builder);\n            }\n          }]);\n          return Footer;\n        }();\n        flatbuf.Footer = Footer;\n      })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n    })(arrow = apache.arrow || (apache.arrow = {}));\n  })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * @constructor\n */\n(function (org) {\n  var apache;\n  (function (apache) {\n    var arrow;\n    (function (arrow) {\n      var flatbuf;\n      (function (flatbuf) {\n        var Block = /*#__PURE__*/function () {\n          function Block() {\n            _classCallCheck(this, Block);\n            this.bb = null;\n            this.bb_pos = 0;\n          }\n          /**\n           * @param number i\n           * @param flatbuffers.ByteBuffer bb\n           * @returns Block\n           */\n          _createClass(Block, [{\n            key: \"__init\",\n            value: function __init(i, bb) {\n              this.bb_pos = i;\n              this.bb = bb;\n              return this;\n            }\n            /**\n             * Index to the start of the RecordBlock (note this is past the Message header)\n             *\n             * @returns flatbuffers.Long\n             */\n          }, {\n            key: \"offset\",\n            value: function offset() {\n              return this.bb.readInt64(this.bb_pos);\n            }\n            /**\n             * Length of the metadata\n             *\n             * @returns number\n             */\n          }, {\n            key: \"metaDataLength\",\n            value: function metaDataLength() {\n              return this.bb.readInt32(this.bb_pos + 8);\n            }\n            /**\n             * Length of the data (this is aligned so there can be a gap between this and\n             * the metatdata).\n             *\n             * @returns flatbuffers.Long\n             */\n          }, {\n            key: \"bodyLength\",\n            value: function bodyLength() {\n              return this.bb.readInt64(this.bb_pos + 16);\n            }\n            /**\n             * @param flatbuffers.Builder builder\n             * @param flatbuffers.Long offset\n             * @param number metaDataLength\n             * @param flatbuffers.Long bodyLength\n             * @returns flatbuffers.Offset\n             */\n          }], [{\n            key: \"createBlock\",\n            value: function createBlock(builder, offset, metaDataLength, bodyLength) {\n              builder.prep(8, 24);\n              builder.writeInt64(bodyLength);\n              builder.pad(4);\n              builder.writeInt32(metaDataLength);\n              builder.writeInt64(offset);\n              return builder.offset();\n            }\n          }]);\n          return Block;\n        }();\n        flatbuf.Block = Block;\n      })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n    })(arrow = apache.arrow || (apache.arrow = {}));\n  })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));","map":{"version":3,"mappings":"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","names":["NS7624605610262437867","org","Footer","i","bb","bb_pos","offset","__offset","readInt16","apache","arrow","flatbuf","MetadataVersion","V1","obj","Schema","__init","__indirect","index","Block","__vector","__vector_len","readInt32","position","builder","startObject","version","addFieldInt16","schemaOffset","addFieldOffset","dictionariesOffset","numElems","startVector","recordBatchesOffset","endObject","finish","startFooter","addVersion","addSchema","addDictionaries","addRecordBatches","endFooter","readInt64","metaDataLength","bodyLength","prep","writeInt64","pad","writeInt32"],"sources":["fb/File.ts"],"sourcesContent":["// automatically generated by the FlatBuffers compiler, do not modify\n\nimport { flatbuffers } from 'flatbuffers';\nimport * as NS7624605610262437867 from './Schema';\n/**\n * ----------------------------------------------------------------------\n * Arrow File metadata\n *\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Footer {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Footer\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Footer {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Footer= obj\n         * @returns Footer\n         */\n        static getRootAsFooter(bb: flatbuffers.ByteBuffer, obj?: Footer): Footer {\n            return (obj || new Footer).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.MetadataVersion\n         */\n        version(): NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1;\n        }\n\n        /**\n         * @param org.apache.arrow.flatbuf.Schema= obj\n         * @returns org.apache.arrow.flatbuf.Schema|null\n         */\n        schema(obj?: NS7624605610262437867.org.apache.arrow.flatbuf.Schema): NS7624605610262437867.org.apache.arrow.flatbuf.Schema | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new NS7624605610262437867.org.apache.arrow.flatbuf.Schema).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Block= obj\n         * @returns org.apache.arrow.flatbuf.Block\n         */\n        dictionaries(index: number, obj?: org.apache.arrow.flatbuf.Block): org.apache.arrow.flatbuf.Block | null {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Block).__init(this.bb!.__vector(this.bb_pos + offset) + index * 24, this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        dictionariesLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Block= obj\n         * @returns org.apache.arrow.flatbuf.Block\n         */\n        recordBatches(index: number, obj?: org.apache.arrow.flatbuf.Block): org.apache.arrow.flatbuf.Block | null {\n            let offset = this.bb!.__offset(this.bb_pos, 10);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Block).__init(this.bb!.__vector(this.bb_pos + offset) + index * 24, this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        recordBatchesLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 10);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startFooter(builder: flatbuffers.Builder) {\n            builder.startObject(4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.MetadataVersion version\n         */\n        static addVersion(builder: flatbuffers.Builder, version: NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion) {\n            builder.addFieldInt16(0, version, NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset schemaOffset\n         */\n        static addSchema(builder: flatbuffers.Builder, schemaOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, schemaOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset dictionariesOffset\n         */\n        static addDictionaries(builder: flatbuffers.Builder, dictionariesOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(2, dictionariesOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startDictionariesVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(24, numElems, 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset recordBatchesOffset\n         */\n        static addRecordBatches(builder: flatbuffers.Builder, recordBatchesOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(3, recordBatchesOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startRecordBatchesVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(24, numElems, 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endFooter(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset offset\n         */\n        static finishFooterBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n            builder.finish(offset);\n        }\n\n        static createFooter(builder: flatbuffers.Builder, version: NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion, schemaOffset: flatbuffers.Offset, dictionariesOffset: flatbuffers.Offset, recordBatchesOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Footer.startFooter(builder);\n            Footer.addVersion(builder, version);\n            Footer.addSchema(builder, schemaOffset);\n            Footer.addDictionaries(builder, dictionariesOffset);\n            Footer.addRecordBatches(builder, recordBatchesOffset);\n            return Footer.endFooter(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Block {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Block\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Block {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * Index to the start of the RecordBlock (note this is past the Message header)\n         *\n         * @returns flatbuffers.Long\n         */\n        offset(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos);\n        }\n\n        /**\n         * Length of the metadata\n         *\n         * @returns number\n         */\n        metaDataLength(): number {\n            return this.bb!.readInt32(this.bb_pos + 8);\n        }\n\n        /**\n         * Length of the data (this is aligned so there can be a gap between this and\n         * the metatdata).\n         *\n         * @returns flatbuffers.Long\n         */\n        bodyLength(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos + 16);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long offset\n         * @param number metaDataLength\n         * @param flatbuffers.Long bodyLength\n         * @returns flatbuffers.Offset\n         */\n        static createBlock(builder: flatbuffers.Builder, offset: flatbuffers.Long, metaDataLength: number, bodyLength: flatbuffers.Long): flatbuffers.Offset {\n            builder.prep(8, 24);\n            builder.writeInt64(bodyLength);\n            builder.pad(4);\n            builder.writeInt32(metaDataLength);\n            builder.writeInt64(offset);\n            return builder.offset();\n        }\n\n    }\n}\n"]},"metadata":{},"sourceType":"module"}
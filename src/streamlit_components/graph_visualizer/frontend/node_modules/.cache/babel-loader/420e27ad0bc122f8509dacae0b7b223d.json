{"ast":null,"code":"import _defineProperty from \"/home/fox/Projects/Python/repo-review/streamlit_components/graph_visualizer/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/fox/Projects/Python/repo-review/streamlit_components/graph_visualizer/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"/home/fox/Projects/Python/repo-review/streamlit_components/graph_visualizer/frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"/home/fox/Projects/Python/repo-review/streamlit_components/graph_visualizer/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/fox/Projects/Python/repo-review/streamlit_components/graph_visualizer/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nvar _excluded = [\"readableStrategy\", \"writableStrategy\", \"queueingStrategy\"];\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Builder } from '../../builder/index';\n/** @ignore */\nexport function builderThroughDOMStream(options) {\n  return new BuilderTransform(options);\n}\n/** @ignore */\nexport var BuilderTransform = /*#__PURE__*/function () {\n  function BuilderTransform(options) {\n    var _this = this,\n      _ReadableStream,\n      _WritableStream;\n    _classCallCheck(this, BuilderTransform);\n    // Access properties by string indexers to defeat closure compiler\n    this._numChunks = 0;\n    this._finished = false;\n    this._bufferedSize = 0;\n    var readableStrategy = options['readableStrategy'],\n      writableStrategy = options['writableStrategy'],\n      _options$queueingStra = options['queueingStrategy'],\n      queueingStrategy = _options$queueingStra === void 0 ? 'count' : _options$queueingStra,\n      builderOptions = _objectWithoutProperties(options, _excluded);\n    this._controller = null;\n    this._builder = Builder.new(builderOptions);\n    this._getSize = queueingStrategy !== 'bytes' ? chunkLength : chunkByteLength;\n    var _readableStrategy = _objectSpread({}, readableStrategy),\n      _readableStrategy$hig = _readableStrategy['highWaterMark'],\n      readableHighWaterMark = _readableStrategy$hig === void 0 ? queueingStrategy === 'bytes' ? Math.pow(2, 14) : 1000 : _readableStrategy$hig;\n    var _writableStrategy = _objectSpread({}, writableStrategy),\n      _writableStrategy$hig = _writableStrategy['highWaterMark'],\n      writableHighWaterMark = _writableStrategy$hig === void 0 ? queueingStrategy === 'bytes' ? Math.pow(2, 14) : 1000 : _writableStrategy$hig;\n    this['readable'] = new ReadableStream((_ReadableStream = {}, _defineProperty(_ReadableStream, 'cancel', function cancel() {\n      _this._builder.clear();\n    }), _defineProperty(_ReadableStream, 'pull', function pull(c) {\n      _this._maybeFlush(_this._builder, _this._controller = c);\n    }), _defineProperty(_ReadableStream, 'start', function start(c) {\n      _this._maybeFlush(_this._builder, _this._controller = c);\n    }), _ReadableStream), {\n      'highWaterMark': readableHighWaterMark,\n      'size': queueingStrategy !== 'bytes' ? chunkLength : chunkByteLength\n    });\n    this['writable'] = new WritableStream((_WritableStream = {}, _defineProperty(_WritableStream, 'abort', function abort() {\n      _this._builder.clear();\n    }), _defineProperty(_WritableStream, 'write', function write() {\n      _this._maybeFlush(_this._builder, _this._controller);\n    }), _defineProperty(_WritableStream, 'close', function close() {\n      _this._maybeFlush(_this._builder.finish(), _this._controller);\n    }), _WritableStream), {\n      'highWaterMark': writableHighWaterMark,\n      'size': function size(value) {\n        return _this._writeValueAndReturnChunkSize(value);\n      }\n    });\n  }\n  _createClass(BuilderTransform, [{\n    key: \"_writeValueAndReturnChunkSize\",\n    value: function _writeValueAndReturnChunkSize(value) {\n      var bufferedSize = this._bufferedSize;\n      this._bufferedSize = this._getSize(this._builder.append(value));\n      return this._bufferedSize - bufferedSize;\n    }\n  }, {\n    key: \"_maybeFlush\",\n    value: function _maybeFlush(builder, controller) {\n      if (controller === null) {\n        return;\n      }\n      if (this._bufferedSize >= controller.desiredSize) {\n        ++this._numChunks && this._enqueue(controller, builder.toVector());\n      }\n      if (builder.finished) {\n        if (builder.length > 0 || this._numChunks === 0) {\n          ++this._numChunks && this._enqueue(controller, builder.toVector());\n        }\n        if (!this._finished && (this._finished = true)) {\n          this._enqueue(controller, null);\n        }\n      }\n    }\n  }, {\n    key: \"_enqueue\",\n    value: function _enqueue(controller, chunk) {\n      this._bufferedSize = 0;\n      this._controller = null;\n      chunk === null ? controller.close() : controller.enqueue(chunk);\n    }\n  }]);\n  return BuilderTransform;\n}();\n/** @ignore */\nvar chunkLength = function chunkLength(chunk) {\n  return chunk.length;\n};\n/** @ignore */\nvar chunkByteLength = function chunkByteLength(chunk) {\n  return chunk.byteLength;\n};","map":{"version":3,"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA,SAASA,OAAO,QAAwB,qBAAqB;AAW7D;AACA,OAAM,SAAUC,uBAAuB,CAAwCC,OAA0C;EACrH,OAAO,IAAIC,gBAAgB,CAACD,OAAO,CAAC;AACxC;AAEA;AACA,WAAaC,gBAAgB;EAYzB,0BAAYD,OAA0C;IAAA;MAAA;MAAA;IAAA;IAElD;IARI,eAAU,GAAG,CAAC;IACd,cAAS,GAAG,KAAK;IACjB,kBAAa,GAAG,CAAC;IAQrB,IAC0BE,gBAAgB,GAItCF,OAAO,CAJN,kBAAkB;MACGG,gBAAgB,GAGtCH,OAAO,CAHN,kBAAkB;MAAA,wBAGnBA,OAAO,CAFN,kBAAkB;MAAGI,gBAAgB,sCAAG,OAAO;MAC7CC,cAAc,4BACjBL,OAAO;IAEX,IAAI,CAACM,WAAW,GAAG,IAAI;IACvB,IAAI,CAACC,QAAQ,GAAGT,OAAO,CAACU,GAAG,CAAWH,cAAc,CAAC;IACrD,IAAI,CAACI,QAAQ,GAAGL,gBAAgB,KAAK,OAAO,GAAGM,WAAW,GAAGC,eAAe;IAE5E,0CAA0GT,gBAAgB;MAAA,0CAAjH,eAAe;MAAGU,qBAAqB,sCAAGR,gBAAgB,KAAK,OAAO,YAAG,CAAC,EAAI,EAAE,IAAG,IAAI;IAChG,0CAA0GD,gBAAgB;MAAA,0CAAjH,eAAe;MAAGU,qBAAqB,sCAAGT,gBAAgB,KAAK,OAAO,YAAG,CAAC,EAAI,EAAE,IAAG,IAAI;IAEhG,IAAI,CAAC,UAAU,CAAC,GAAG,IAAIU,cAAc,yDAChC,QAAQ,EAAG,kBAAM;MAAG,KAAI,CAACP,QAAQ,CAACQ,KAAK,EAAE;IAAE,CAAC,oCAC5C,MAAM,EAAG,cAACC,CAAC,EAAI;MAAG,KAAI,CAACC,WAAW,CAAC,KAAI,CAACV,QAAQ,EAAE,KAAI,CAACD,WAAW,GAAGU,CAAC,CAAC;IAAE,CAAC,oCAC1E,OAAO,EAAG,eAACA,CAAC,EAAI;MAAG,KAAI,CAACC,WAAW,CAAC,KAAI,CAACV,QAAQ,EAAE,KAAI,CAACD,WAAW,GAAGU,CAAC,CAAC;IAAE,CAAC,qBAC7E;MACC,eAAe,EAAEJ,qBAAqB;MACtC,MAAM,EAAER,gBAAgB,KAAK,OAAO,GAAGM,WAAW,GAAGC;KACxD,CAAC;IAEF,IAAI,CAAC,UAAU,CAAC,GAAG,IAAIO,cAAc,yDAChC,OAAO,EAAG,iBAAK;MAAG,KAAI,CAACX,QAAQ,CAACQ,KAAK,EAAE;IAAE,CAAC,oCAC1C,OAAO,EAAG,iBAAK;MAAG,KAAI,CAACE,WAAW,CAAC,KAAI,CAACV,QAAQ,EAAE,KAAI,CAACD,WAAW,CAAC;IAAE,CAAC,oCACtE,OAAO,EAAG,iBAAK;MAAG,KAAI,CAACW,WAAW,CAAC,KAAI,CAACV,QAAQ,CAACY,MAAM,EAAE,EAAE,KAAI,CAACb,WAAW,CAAC;IAAE,CAAC,qBACjF;MACC,eAAe,EAAEO,qBAAqB;MACtC,MAAM,EAAE,cAACO,KAA0B;QAAA,OAAK,KAAI,CAACC,6BAA6B,CAACD,KAAK,CAAC;MAAA;KACpF,CAAC;EACN;EAAC;IAAA;IAAA,OAEO,uCAA8BA,KAA0B;MAC5D,IAAME,YAAY,GAAG,IAAI,CAACC,aAAa;MACvC,IAAI,CAACA,aAAa,GAAG,IAAI,CAACd,QAAQ,CAAC,IAAI,CAACF,QAAQ,CAACiB,MAAM,CAACJ,KAAK,CAAC,CAAC;MAC/D,OAAO,IAAI,CAACG,aAAa,GAAGD,YAAY;IAC5C;EAAC;IAAA;IAAA,OAEO,qBAAYG,OAA0B,EAAEC,UAAwD;MACpG,IAAIA,UAAU,KAAK,IAAI,EAAE;QAAE;;MAC3B,IAAI,IAAI,CAACH,aAAa,IAAIG,UAAU,CAACC,WAAY,EAAE;QAC/C,EAAE,IAAI,CAACC,UAAU,IAAI,IAAI,CAACC,QAAQ,CAACH,UAAU,EAAED,OAAO,CAACK,QAAQ,EAAE,CAAC;;MAEtE,IAAIL,OAAO,CAACM,QAAQ,EAAE;QAClB,IAAIN,OAAO,CAACO,MAAM,GAAG,CAAC,IAAI,IAAI,CAACJ,UAAU,KAAK,CAAC,EAAE;UAC7C,EAAE,IAAI,CAACA,UAAU,IAAI,IAAI,CAACC,QAAQ,CAACH,UAAU,EAAED,OAAO,CAACK,QAAQ,EAAE,CAAC;;QAEtE,IAAI,CAAC,IAAI,CAACG,SAAS,KAAK,IAAI,CAACA,SAAS,GAAG,IAAI,CAAC,EAAE;UAC5C,IAAI,CAACJ,QAAQ,CAACH,UAAU,EAAE,IAAI,CAAC;;;IAG3C;EAAC;IAAA;IAAA,OAEO,kBAASA,UAAiD,EAAEQ,KAAkB;MAClF,IAAI,CAACX,aAAa,GAAG,CAAC;MACtB,IAAI,CAACjB,WAAW,GAAG,IAAI;MACvB4B,KAAK,KAAK,IAAI,GAAGR,UAAU,CAACS,KAAK,EAAE,GAAGT,UAAU,CAACU,OAAO,CAACF,KAAK,CAAC;IACnE;EAAC;EAAA;AAAA;AAGL;AAAe,IAAMxB,WAAW,GAAG,SAAdA,WAAW,CAA8BwB,KAA6B;EAAA,OAAKA,KAAK,CAACF,MAAM;AAAA;AAC5G;AAAe,IAAMrB,eAAe,GAAG,SAAlBA,eAAe,CAA8BuB,KAA6B;EAAA,OAAKA,KAAK,CAACG,UAAU;AAAA","names":["Builder","builderThroughDOMStream","options","BuilderTransform","readableStrategy","writableStrategy","queueingStrategy","builderOptions","_controller","_builder","new","_getSize","chunkLength","chunkByteLength","readableHighWaterMark","writableHighWaterMark","ReadableStream","clear","c","_maybeFlush","WritableStream","finish","value","_writeValueAndReturnChunkSize","bufferedSize","_bufferedSize","append","builder","controller","desiredSize","_numChunks","_enqueue","toVector","finished","length","_finished","chunk","close","enqueue","byteLength"],"sources":["io/whatwg/builder.ts"],"sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DataType } from '../../type';\nimport { Vector } from '../../vector';\nimport { VectorType as V } from '../../interfaces';\nimport { Builder, BuilderOptions } from '../../builder/index';\n\n/** @ignore */\nexport interface BuilderTransformOptions<T extends DataType = any, TNull = any> extends BuilderOptions<T, TNull> {\n    queueingStrategy?: 'bytes' | 'count';\n    dictionaryHashFunction?: (value: any) => string | number;\n    readableStrategy?: { highWaterMark?: number, size?: any, type?: 'bytes'; };\n    writableStrategy?: { highWaterMark?: number, size?: any, type?: 'bytes'; };\n    valueToChildTypeId?: (builder: Builder<T, TNull>, value: any, offset: number) => number;\n}\n\n/** @ignore */\nexport function builderThroughDOMStream<T extends DataType = any, TNull = any>(options: BuilderTransformOptions<T, TNull>) {\n    return new BuilderTransform(options);\n}\n\n/** @ignore */\nexport class BuilderTransform<T extends DataType = any, TNull = any> {\n\n    public readable: ReadableStream<V<T>>;\n    public writable: WritableStream<T['TValue'] | TNull>;\n    public _controller: ReadableStreamDefaultController<V<T>> | null;\n\n    private _numChunks = 0;\n    private _finished = false;\n    private _bufferedSize = 0;\n    private _builder: Builder<T, TNull>;\n    private _getSize: (builder: Builder<T, TNull>) => number;\n\n    constructor(options: BuilderTransformOptions<T, TNull>) {\n\n        // Access properties by string indexers to defeat closure compiler\n\n        const {\n            ['readableStrategy']: readableStrategy,\n            ['writableStrategy']: writableStrategy,\n            ['queueingStrategy']: queueingStrategy = 'count',\n            ...builderOptions\n        } = options;\n\n        this._controller = null;\n        this._builder = Builder.new<T, TNull>(builderOptions);\n        this._getSize = queueingStrategy !== 'bytes' ? chunkLength : chunkByteLength;\n\n        const { ['highWaterMark']: readableHighWaterMark = queueingStrategy === 'bytes' ? 2 ** 14 : 1000 } = { ...readableStrategy };\n        const { ['highWaterMark']: writableHighWaterMark = queueingStrategy === 'bytes' ? 2 ** 14 : 1000 } = { ...writableStrategy };\n\n        this['readable'] = new ReadableStream<V<T>>({\n            ['cancel']: ()  => { this._builder.clear(); },\n            ['pull']: (c) => { this._maybeFlush(this._builder, this._controller = c); },\n            ['start']: (c) => { this._maybeFlush(this._builder, this._controller = c); },\n        }, {\n            'highWaterMark': readableHighWaterMark,\n            'size': queueingStrategy !== 'bytes' ? chunkLength : chunkByteLength,\n        });\n\n        this['writable'] = new WritableStream({\n            ['abort']: () => { this._builder.clear(); },\n            ['write']: () => { this._maybeFlush(this._builder, this._controller); },\n            ['close']: () => { this._maybeFlush(this._builder.finish(), this._controller); },\n        }, {\n            'highWaterMark': writableHighWaterMark,\n            'size': (value: T['TValue'] | TNull) => this._writeValueAndReturnChunkSize(value),\n        });\n    }\n\n    private _writeValueAndReturnChunkSize(value: T['TValue'] | TNull) {\n        const bufferedSize = this._bufferedSize;\n        this._bufferedSize = this._getSize(this._builder.append(value));\n        return this._bufferedSize - bufferedSize;\n    }\n\n    private _maybeFlush(builder: Builder<T, TNull>, controller: ReadableStreamDefaultController<V<T>> | null) {\n        if (controller === null) { return; }\n        if (this._bufferedSize >= controller.desiredSize!) {\n            ++this._numChunks && this._enqueue(controller, builder.toVector());\n        }\n        if (builder.finished) {\n            if (builder.length > 0 || this._numChunks === 0) {\n                ++this._numChunks && this._enqueue(controller, builder.toVector());\n            }\n            if (!this._finished && (this._finished = true)) {\n                this._enqueue(controller, null);\n            }\n        }\n    }\n\n    private _enqueue(controller: ReadableStreamDefaultController<V<T>>, chunk: V<T> | null) {\n        this._bufferedSize = 0;\n        this._controller = null;\n        chunk === null ? controller.close() : controller.enqueue(chunk);\n    }\n}\n\n/** @ignore */ const chunkLength = <T extends DataType = any>(chunk: Vector<T> | Builder<T>) => chunk.length;\n/** @ignore */ const chunkByteLength = <T extends DataType = any>(chunk: Vector<T> | Builder<T>) => chunk.byteLength;\n"]},"metadata":{},"sourceType":"module"}
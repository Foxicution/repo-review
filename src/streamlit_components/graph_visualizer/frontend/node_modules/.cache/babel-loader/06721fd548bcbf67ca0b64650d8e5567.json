{"ast":null,"code":"var _jsxFileName = \"/home/fox/Projects/Python/repo-review/streamlit_components/graph_visualizer/frontend/src/MyComponent.tsx\";\nimport { StreamlitComponentBase, withStreamlitConnection } from \"streamlit-component-lib\";\nimport React, { useState } from \"react\";\nimport Graph from 'react-graph-vis';\nfunction randomColor() {\n  const red = Math.floor(Math.random() * 256).toString(16).padStart(2, '0');\n  const green = Math.floor(Math.random() * 256).toString(16).padStart(2, '0');\n  const blue = Math.floor(Math.random() * 256).toString(16).padStart(2, '0');\n  return `#${red}${green}${blue}`;\n}\nconst options = {\n  layout: {\n    hierarchical: false\n  },\n  edges: {\n    color: \"#000000\"\n  }\n};\nclass StreamlitVisGraph extends StreamlitComponentBase {\n  constructor() {\n    super(...arguments);\n    this.App = () => {\n      const createNode = (x, y) => {\n        const color = randomColor();\n        setState(_ref => {\n          let {\n            graph: {\n              nodes,\n              edges\n            },\n            counter,\n            ...rest\n          } = _ref;\n          const id = counter + 1;\n          const from = Math.floor(Math.random() * (counter - 1)) + 1;\n          return {\n            graph: {\n              nodes: [...nodes, {\n                id,\n                label: `Node ${id}`,\n                color,\n                x,\n                y\n              }],\n              edges: [...edges, {\n                from,\n                to: id\n              }]\n            },\n            counter: id,\n            ...rest\n          };\n        });\n      };\n      const [state, setState] = useState({\n        counter: 5,\n        graph: {\n          nodes: [{\n            id: 1,\n            label: \"Node 1\",\n            color: \"#e04141\"\n          }, {\n            id: 2,\n            label: \"Node 2\",\n            color: \"#e09c41\"\n          }, {\n            id: 3,\n            label: \"Node 3\",\n            color: \"#e0df41\"\n          }, {\n            id: 4,\n            label: \"Node 4\",\n            color: \"#7be041\"\n          }, {\n            id: 5,\n            label: \"Node 5\",\n            color: \"#41e0c9\"\n          }],\n          edges: [{\n            from: 1,\n            to: 2\n          }, {\n            from: 1,\n            to: 3\n          }, {\n            from: 2,\n            to: 4\n          }, {\n            from: 2,\n            to: 5\n          }]\n        },\n        events: {\n          select: event => {\n            console.log(\"Selected nodes:\");\n            console.log(event.nodes[0]);\n          }\n          // doubleClick: ({ pointer: { canvas } }) => {\n          //   createNode(canvas.x, canvas.y);\n          // }\n        }\n      });\n\n      const {\n        graph,\n        events\n      } = state;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }\n      }, \"React graph vis\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: \"https://github.com/crubier/react-graph-vis\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }\n      }, \"Github\"), \" -\", \" \", /*#__PURE__*/React.createElement(\"a\", {\n        href: \"https://www.npmjs.com/package/react-graph-vis\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }\n      }, \"NPM\")), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: \"https://github.com/crubier/react-graph-vis/tree/master/example/src/index.js\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 12\n        }\n      }, \"Source of this page\")), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }\n      }, \"A React component to display beautiful network graphs using vis.js\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }\n      }, \"Make sure to visit \", /*#__PURE__*/React.createElement(\"a\", {\n        href: \"http://visjs.org\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 31\n        }\n      }, \"visjs.org\"), \" for more info.\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }\n      }, \"This package allows to render network graphs using vis.js.\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }\n      }, \"Rendered graphs are scrollable, zoomable, retina ready, dynamic\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }\n      }, \"In this example, we manage state with react: on double click we create a new node, and on select we display an alert.\"), /*#__PURE__*/React.createElement(Graph, {\n        graph: graph,\n        options: options,\n        events: events,\n        style: {\n          height: \"640px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }\n      }));\n    };\n  }\n}\nexport default withStreamlitConnection(StreamlitVisGraph);","map":{"version":3,"names":["StreamlitComponentBase","withStreamlitConnection","React","useState","Graph","randomColor","red","Math","floor","random","toString","padStart","green","blue","options","layout","hierarchical","edges","color","StreamlitVisGraph","App","createNode","x","y","setState","graph","nodes","counter","rest","id","from","label","to","state","events","select","event","console","log","height"],"sources":["/home/fox/Projects/Python/repo-review/streamlit_components/graph_visualizer/frontend/src/MyComponent.tsx"],"sourcesContent":["import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport React, { ReactNode, useState } from \"react\"\nimport { v4 as uuidv4 } from 'uuid'\nimport Graph from 'react-graph-vis';\n\n\nfunction randomColor() {\n  const red = Math.floor(Math.random() * 256).toString(16).padStart(2, '0');\n  const green = Math.floor(Math.random() * 256).toString(16).padStart(2, '0');\n  const blue = Math.floor(Math.random() * 256).toString(16).padStart(2, '0');\n  return `#${red}${green}${blue}`;\n}\n\n\nconst options = {\n  layout: {\n    hierarchical: false\n  },\n  edges: {\n    color: \"#000000\"\n  }\n};\n\nclass StreamlitVisGraph extends StreamlitComponentBase {\n  \n  App = () => {\n    const createNode = (x: any, y: any) => {\n      const color = randomColor();\n      setState(({ graph: { nodes, edges }, counter, ...rest }) => {\n        const id = counter + 1;\n        const from = Math.floor(Math.random() * (counter - 1)) + 1;\n        return {\n          graph: {\n            nodes: [\n              ...nodes,\n              { id, label: `Node ${id}`, color, x, y }\n            ],\n            edges: [\n              ...edges,\n              { from, to: id }\n            ]\n          },\n          counter: id,\n          ...rest\n        }\n      });\n    }\n    const [state, setState] = useState({\n      counter: 5,\n      graph: {\n        nodes: [\n          { id: 1, label: \"Node 1\", color: \"#e04141\" },\n          { id: 2, label: \"Node 2\", color: \"#e09c41\" },\n          { id: 3, label: \"Node 3\", color: \"#e0df41\" },\n          { id: 4, label: \"Node 4\", color: \"#7be041\" },\n          { id: 5, label: \"Node 5\", color: \"#41e0c9\" }\n        ],\n        edges: [\n          { from: 1, to: 2 },\n          { from: 1, to: 3 },\n          { from: 2, to: 4 },\n          { from: 2, to: 5 }\n        ]\n      },\n      events: {\n        select: (event) => {\n          console.log(\"Selected nodes:\");\n          console.log(event.nodes[0]);\n        },\n        // doubleClick: ({ pointer: { canvas } }) => {\n        //   createNode(canvas.x, canvas.y);\n        // }\n      }\n    })\n    const { graph, events } = state;\n    return (\n      <div>\n        <h1>React graph vis</h1>\n        <p>\n          <a href=\"https://github.com/crubier/react-graph-vis\">Github</a> -{\" \"}\n          <a href=\"https://www.npmjs.com/package/react-graph-vis\">NPM</a>\n        </p>\n        <p><a href=\"https://github.com/crubier/react-graph-vis/tree/master/example/src/index.js\">Source of this page</a></p>\n        <p>A React component to display beautiful network graphs using vis.js</p>\n        <p>Make sure to visit <a href=\"http://visjs.org\">visjs.org</a> for more info.</p>\n        <p>This package allows to render network graphs using vis.js.</p>\n        <p>Rendered graphs are scrollable, zoomable, retina ready, dynamic</p>\n        <p>In this example, we manage state with react: on double click we create a new node, and on select we display an alert.</p>\n        <Graph graph={graph} options={options} events={events} style={{ height: \"640px\" }} />\n      </div>\n    );\n  \n  }\n}\n\nexport default withStreamlitConnection(StreamlitVisGraph)"],"mappings":"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"},"metadata":{},"sourceType":"module"}